// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module bd_85a6_csc_0_v_hcresampler_core_2_Pipeline_VITIS_LOOP_724_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        stream_in_vresampled_dout,
        stream_in_vresampled_num_data_valid,
        stream_in_vresampled_fifo_cap,
        stream_in_vresampled_empty_n,
        stream_in_vresampled_read,
        stream_in_hresampled_din,
        stream_in_hresampled_num_data_valid,
        stream_in_hresampled_fifo_cap,
        stream_in_hresampled_full_n,
        stream_in_hresampled_write,
        pixbuf_y_4,
        pixbuf_y_3,
        pixbuf_y_2,
        pixbuf_y,
        p_0_0_0_0_0536742_lcssa768_i,
        loopWidth,
        select_ln685,
        zext_ln720,
        p_read,
        pixbuf_y_9_out,
        pixbuf_y_9_out_ap_vld,
        pixbuf_y_8_out,
        pixbuf_y_8_out_ap_vld,
        pixbuf_y_7_out,
        pixbuf_y_7_out_ap_vld,
        pixbuf_y_6_out_i,
        pixbuf_y_6_out_o,
        pixbuf_y_6_out_o_ap_vld,
        pixbuf_y_5_out,
        pixbuf_y_5_out_ap_vld,
        p_0_1_0_0_0748795_i_out_i,
        p_0_1_0_0_0748795_i_out_o,
        p_0_1_0_0_0748795_i_out_o_ap_vld,
        p_0_1_0_0_0744792_i_out_i,
        p_0_1_0_0_0744792_i_out_o,
        p_0_1_0_0_0744792_i_out_o_ap_vld,
        p_out_i,
        p_out_o,
        p_out_o_ap_vld,
        p_out1_i,
        p_out1_o,
        p_out1_o_ap_vld,
        p_0_0_0785_i_out_i,
        p_0_0_0785_i_out_o,
        p_0_0_0785_i_out_o_ap_vld,
        p_0_0_0480782_i_out_i,
        p_0_0_0480782_i_out_o,
        p_0_0_0480782_i_out_o_ap_vld,
        p_0_1_0_0_0751_i_out_i,
        p_0_1_0_0_0751_i_out_o,
        p_0_1_0_0_0751_i_out_o_ap_vld,
        p_0_1_0_0_0747_i_out_i,
        p_0_1_0_0_0747_i_out_o,
        p_0_1_0_0_0747_i_out_o_ap_vld,
        p_0_2_0_0_0741_i_out_i,
        p_0_2_0_0_0741_i_out_o,
        p_0_2_0_0_0741_i_out_o_ap_vld,
        p_0_1_0_0_0739_i_out_i,
        p_0_1_0_0_0739_i_out_o,
        p_0_1_0_0_0739_i_out_o_ap_vld,
        p_0_0_0_0_0536737_i_out_i,
        p_0_0_0_0_0536737_i_out_o,
        p_0_0_0_0_0536737_i_out_o_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [23:0] stream_in_vresampled_dout;
input  [4:0] stream_in_vresampled_num_data_valid;
input  [4:0] stream_in_vresampled_fifo_cap;
input   stream_in_vresampled_empty_n;
output   stream_in_vresampled_read;
output  [23:0] stream_in_hresampled_din;
input  [4:0] stream_in_hresampled_num_data_valid;
input  [4:0] stream_in_hresampled_fifo_cap;
input   stream_in_hresampled_full_n;
output   stream_in_hresampled_write;
input  [7:0] pixbuf_y_4;
input  [7:0] pixbuf_y_3;
input  [7:0] pixbuf_y_2;
input  [7:0] pixbuf_y;
input  [7:0] p_0_0_0_0_0536742_lcssa768_i;
input  [12:0] loopWidth;
input  [2:0] select_ln685;
input  [11:0] zext_ln720;
input  [0:0] p_read;
output  [7:0] pixbuf_y_9_out;
output   pixbuf_y_9_out_ap_vld;
output  [7:0] pixbuf_y_8_out;
output   pixbuf_y_8_out_ap_vld;
output  [7:0] pixbuf_y_7_out;
output   pixbuf_y_7_out_ap_vld;
input  [7:0] pixbuf_y_6_out_i;
output  [7:0] pixbuf_y_6_out_o;
output   pixbuf_y_6_out_o_ap_vld;
output  [7:0] pixbuf_y_5_out;
output   pixbuf_y_5_out_ap_vld;
input  [7:0] p_0_1_0_0_0748795_i_out_i;
output  [7:0] p_0_1_0_0_0748795_i_out_o;
output   p_0_1_0_0_0748795_i_out_o_ap_vld;
input  [7:0] p_0_1_0_0_0744792_i_out_i;
output  [7:0] p_0_1_0_0_0744792_i_out_o;
output   p_0_1_0_0_0744792_i_out_o_ap_vld;
input  [7:0] p_out_i;
output  [7:0] p_out_o;
output   p_out_o_ap_vld;
input  [7:0] p_out1_i;
output  [7:0] p_out1_o;
output   p_out1_o_ap_vld;
input  [7:0] p_0_0_0785_i_out_i;
output  [7:0] p_0_0_0785_i_out_o;
output   p_0_0_0785_i_out_o_ap_vld;
input  [7:0] p_0_0_0480782_i_out_i;
output  [7:0] p_0_0_0480782_i_out_o;
output   p_0_0_0480782_i_out_o_ap_vld;
input  [7:0] p_0_1_0_0_0751_i_out_i;
output  [7:0] p_0_1_0_0_0751_i_out_o;
output   p_0_1_0_0_0751_i_out_o_ap_vld;
input  [7:0] p_0_1_0_0_0747_i_out_i;
output  [7:0] p_0_1_0_0_0747_i_out_o;
output   p_0_1_0_0_0747_i_out_o_ap_vld;
input  [7:0] p_0_2_0_0_0741_i_out_i;
output  [7:0] p_0_2_0_0_0741_i_out_o;
output   p_0_2_0_0_0741_i_out_o_ap_vld;
input  [7:0] p_0_1_0_0_0739_i_out_i;
output  [7:0] p_0_1_0_0_0739_i_out_o;
output   p_0_1_0_0_0739_i_out_o_ap_vld;
input  [7:0] p_0_0_0_0_0536737_i_out_i;
output  [7:0] p_0_0_0_0_0536737_i_out_o;
output   p_0_0_0_0_0536737_i_out_o_ap_vld;

reg ap_idle;
reg stream_in_vresampled_read;
reg[23:0] stream_in_hresampled_din;
reg stream_in_hresampled_write;
reg pixbuf_y_9_out_ap_vld;
reg pixbuf_y_8_out_ap_vld;
reg pixbuf_y_7_out_ap_vld;
reg[7:0] pixbuf_y_6_out_o;
reg pixbuf_y_6_out_o_ap_vld;
reg pixbuf_y_5_out_ap_vld;
reg[7:0] p_0_1_0_0_0748795_i_out_o;
reg p_0_1_0_0_0748795_i_out_o_ap_vld;
reg[7:0] p_0_1_0_0_0744792_i_out_o;
reg p_0_1_0_0_0744792_i_out_o_ap_vld;
reg[7:0] p_out_o;
reg p_out_o_ap_vld;
reg[7:0] p_out1_o;
reg p_out1_o_ap_vld;
reg[7:0] p_0_0_0785_i_out_o;
reg p_0_0_0785_i_out_o_ap_vld;
reg[7:0] p_0_0_0480782_i_out_o;
reg p_0_0_0480782_i_out_o_ap_vld;
reg[7:0] p_0_1_0_0_0751_i_out_o;
reg p_0_1_0_0_0751_i_out_o_ap_vld;
reg[7:0] p_0_1_0_0_0747_i_out_o;
reg p_0_1_0_0_0747_i_out_o_ap_vld;
reg[7:0] p_0_2_0_0_0741_i_out_o;
reg p_0_2_0_0_0741_i_out_o_ap_vld;
reg[7:0] p_0_1_0_0_0739_i_out_o;
reg p_0_1_0_0_0739_i_out_o_ap_vld;
reg[7:0] p_0_0_0_0_0536737_i_out_o;
reg p_0_0_0_0_0536737_i_out_o_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln724_reg_767;
reg   [0:0] icmp_ln732_reg_789;
reg    ap_predicate_op52_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg   [0:0] icmp_ln724_reg_767_pp0_iter1_reg;
reg   [0:0] tmp_reg_803;
reg   [0:0] tmp_reg_803_pp0_iter1_reg;
reg    ap_predicate_op104_write_state3;
reg    ap_predicate_op110_write_state3;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln724_fu_257_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    stream_in_vresampled_blk_n;
wire    ap_block_pp0_stage0;
reg    stream_in_hresampled_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] trunc_ln730_fu_273_p1;
reg   [0:0] trunc_ln730_reg_771;
reg   [0:0] trunc_ln730_reg_771_pp0_iter1_reg;
wire   [0:0] odd_col_fu_283_p1;
reg   [0:0] odd_col_reg_783;
reg   [0:0] odd_col_reg_783_pp0_iter1_reg;
wire   [0:0] icmp_ln732_fu_287_p2;
wire   [0:0] cmp150_i_fu_293_p2;
reg   [0:0] cmp150_i_reg_793;
reg   [0:0] cmp150_i_reg_793_pp0_iter1_reg;
wire   [7:0] select_ln814_fu_479_p3;
wire   [7:0] select_ln814_1_fu_486_p3;
wire   [7:0] select_ln814_2_fu_493_p3;
wire   [7:0] select_ln814_3_fu_500_p3;
wire   [7:0] select_ln814_4_fu_507_p3;
wire   [7:0] select_ln814_5_fu_514_p3;
wire   [7:0] select_ln746_fu_344_p3;
wire   [7:0] select_ln746_1_fu_351_p3;
wire   [7:0] trunc_ln734_2_fu_324_p4;
wire   [7:0] trunc_ln734_fu_320_p1;
reg   [12:0] x_fu_118;
wire   [12:0] add_ln724_fu_263_p2;
wire    ap_loop_init;
reg   [12:0] ap_sig_allocacmp_x_3;
reg   [7:0] pixbuf_y_5_fu_122;
reg   [7:0] pixbuf_y_10_fu_126;
reg   [7:0] pixbuf_y_7_fu_130;
reg   [7:0] pixbuf_y_8_fu_134;
reg   [7:0] pixbuf_y_9_fu_138;
wire   [23:0] p_s_fu_599_p4;
reg    ap_block_pp0_stage0_01001;
wire   [23:0] p_0_fu_622_p4;
wire   [13:0] zext_ln730_fu_269_p1;
wire   [13:0] select_ln685_cast_fu_220_p1;
wire   [13:0] out_x_fu_277_p2;
wire   [12:0] zext_ln720_cast_fu_216_p1;
wire   [7:0] select_ln792_fu_437_p3;
wire   [7:0] select_ln792_1_fu_444_p3;
wire   [7:0] select_ln792_2_fu_451_p3;
wire   [7:0] select_ln792_3_fu_458_p3;
wire   [7:0] select_ln792_4_fu_465_p3;
wire   [7:0] select_ln792_5_fu_472_p3;
wire   [8:0] zext_ln863_1_fu_525_p1;
wire   [8:0] add_ln863_fu_529_p2;
wire   [8:0] zext_ln863_fu_521_p1;
wire   [8:0] add_ln863_1_fu_535_p2;
wire   [8:0] zext_ln865_1_fu_555_p1;
wire   [8:0] add_ln865_fu_559_p2;
wire   [8:0] zext_ln865_fu_551_p1;
wire   [8:0] add_ln865_1_fu_565_p2;
wire   [7:0] trunc_ln2_fu_571_p4;
wire   [7:0] trunc_ln1_fu_541_p4;
wire   [7:0] select_ln688_fu_581_p3;
wire   [7:0] select_ln688_1_fu_588_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_538;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_done_reg = 1'b0;
end

bd_85a6_csc_0_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pixbuf_y_10_fu_126 <= p_0_0_0_0_0536742_lcssa768_i;
        end else if ((1'b1 == ap_condition_538)) begin
            pixbuf_y_10_fu_126 <= trunc_ln734_fu_320_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pixbuf_y_5_fu_122 <= pixbuf_y;
        end else if (((icmp_ln724_reg_767_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            pixbuf_y_5_fu_122 <= pixbuf_y_10_fu_126;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pixbuf_y_7_fu_130 <= pixbuf_y_2;
        end else if (((icmp_ln724_reg_767_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            pixbuf_y_7_fu_130 <= pixbuf_y_8_fu_134;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pixbuf_y_8_fu_134 <= pixbuf_y_3;
        end else if (((icmp_ln724_reg_767_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            pixbuf_y_8_fu_134 <= pixbuf_y_9_fu_138;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pixbuf_y_9_fu_138 <= pixbuf_y_4;
        end else if (((icmp_ln724_reg_767_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            pixbuf_y_9_fu_138 <= pixbuf_y_5_fu_122;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln724_fu_257_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            x_fu_118 <= add_ln724_fu_263_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            x_fu_118 <= 13'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        cmp150_i_reg_793_pp0_iter1_reg <= cmp150_i_reg_793;
        icmp_ln724_reg_767 <= icmp_ln724_fu_257_p2;
        icmp_ln724_reg_767_pp0_iter1_reg <= icmp_ln724_reg_767;
        odd_col_reg_783_pp0_iter1_reg <= odd_col_reg_783;
        tmp_reg_803_pp0_iter1_reg <= tmp_reg_803;
        trunc_ln730_reg_771_pp0_iter1_reg <= trunc_ln730_reg_771;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln724_fu_257_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cmp150_i_reg_793 <= cmp150_i_fu_293_p2;
        icmp_ln732_reg_789 <= icmp_ln732_fu_287_p2;
        odd_col_reg_783 <= odd_col_fu_283_p1;
        tmp_reg_803 <= out_x_fu_277_p2[32'd13];
        trunc_ln730_reg_771 <= trunc_ln730_fu_273_p1;
    end
end

always @ (*) begin
    if (((icmp_ln724_fu_257_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_x_3 = 13'd0;
    end else begin
        ap_sig_allocacmp_x_3 = x_fu_118;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln724_reg_767_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_0_0_0480782_i_out_o = select_ln814_5_fu_514_p3;
    end else begin
        p_0_0_0480782_i_out_o = p_0_0_0480782_i_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln724_reg_767_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_0_0_0480782_i_out_o_ap_vld = 1'b1;
    end else begin
        p_0_0_0480782_i_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln724_reg_767_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_0_0_0785_i_out_o = select_ln814_4_fu_507_p3;
    end else begin
        p_0_0_0785_i_out_o = p_0_0_0785_i_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln724_reg_767_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_0_0_0785_i_out_o_ap_vld = 1'b1;
    end else begin
        p_0_0_0785_i_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln732_reg_789 == 1'd1) & (icmp_ln724_reg_767 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_0_0_0_0536737_i_out_o = trunc_ln734_fu_320_p1;
    end else begin
        p_0_0_0_0_0536737_i_out_o = p_0_0_0_0_0536737_i_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln732_reg_789 == 1'd1) & (icmp_ln724_reg_767 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_0_0_0_0536737_i_out_o_ap_vld = 1'b1;
    end else begin
        p_0_0_0_0_0536737_i_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln732_reg_789 == 1'd1) & (icmp_ln724_reg_767 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_1_0_0_0739_i_out_o = {{stream_in_vresampled_dout[15:8]}};
    end else begin
        p_0_1_0_0_0739_i_out_o = p_0_1_0_0_0739_i_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln732_reg_789 == 1'd1) & (icmp_ln724_reg_767 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_1_0_0_0739_i_out_o_ap_vld = 1'b1;
    end else begin
        p_0_1_0_0_0739_i_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln724_reg_767_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_0_1_0_0_0744792_i_out_o = select_ln814_1_fu_486_p3;
    end else begin
        p_0_1_0_0_0744792_i_out_o = p_0_1_0_0_0744792_i_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln724_reg_767_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_0_1_0_0_0744792_i_out_o_ap_vld = 1'b1;
    end else begin
        p_0_1_0_0_0744792_i_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln732_reg_789 == 1'd1) & (icmp_ln724_reg_767 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_1_0_0_0747_i_out_o = select_ln746_1_fu_351_p3;
    end else begin
        p_0_1_0_0_0747_i_out_o = p_0_1_0_0_0747_i_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln732_reg_789 == 1'd1) & (icmp_ln724_reg_767 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_1_0_0_0747_i_out_o_ap_vld = 1'b1;
    end else begin
        p_0_1_0_0_0747_i_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln724_reg_767_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_0_1_0_0_0748795_i_out_o = select_ln814_fu_479_p3;
    end else begin
        p_0_1_0_0_0748795_i_out_o = p_0_1_0_0_0748795_i_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln724_reg_767_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_0_1_0_0_0748795_i_out_o_ap_vld = 1'b1;
    end else begin
        p_0_1_0_0_0748795_i_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln732_reg_789 == 1'd1) & (icmp_ln724_reg_767 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_1_0_0_0751_i_out_o = select_ln746_fu_344_p3;
    end else begin
        p_0_1_0_0_0751_i_out_o = p_0_1_0_0_0751_i_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln732_reg_789 == 1'd1) & (icmp_ln724_reg_767 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_1_0_0_0751_i_out_o_ap_vld = 1'b1;
    end else begin
        p_0_1_0_0_0751_i_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln732_reg_789 == 1'd1) & (icmp_ln724_reg_767 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_2_0_0_0741_i_out_o = {{stream_in_vresampled_dout[23:16]}};
    end else begin
        p_0_2_0_0_0741_i_out_o = p_0_2_0_0_0741_i_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln732_reg_789 == 1'd1) & (icmp_ln724_reg_767 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_2_0_0_0741_i_out_o_ap_vld = 1'b1;
    end else begin
        p_0_2_0_0_0741_i_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln724_reg_767_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_out1_o = select_ln814_3_fu_500_p3;
    end else begin
        p_out1_o = p_out1_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln724_reg_767_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_out1_o_ap_vld = 1'b1;
    end else begin
        p_out1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln724_reg_767_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_out_o = select_ln814_2_fu_493_p3;
    end else begin
        p_out_o = p_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln724_reg_767_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_out_o_ap_vld = 1'b1;
    end else begin
        p_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln724_reg_767_pp0_iter1_reg == 1'd1))) begin
        pixbuf_y_5_out_ap_vld = 1'b1;
    end else begin
        pixbuf_y_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln724_reg_767_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pixbuf_y_6_out_o = pixbuf_y_7_fu_130;
    end else begin
        pixbuf_y_6_out_o = pixbuf_y_6_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln724_reg_767_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pixbuf_y_6_out_o_ap_vld = 1'b1;
    end else begin
        pixbuf_y_6_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln724_reg_767_pp0_iter1_reg == 1'd1))) begin
        pixbuf_y_7_out_ap_vld = 1'b1;
    end else begin
        pixbuf_y_7_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln724_reg_767_pp0_iter1_reg == 1'd1))) begin
        pixbuf_y_8_out_ap_vld = 1'b1;
    end else begin
        pixbuf_y_8_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln724_reg_767_pp0_iter1_reg == 1'd1))) begin
        pixbuf_y_9_out_ap_vld = 1'b1;
    end else begin
        pixbuf_y_9_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op110_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op104_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        stream_in_hresampled_blk_n = stream_in_hresampled_full_n;
    end else begin
        stream_in_hresampled_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if ((ap_predicate_op110_write_state3 == 1'b1)) begin
            stream_in_hresampled_din = p_0_fu_622_p4;
        end else if ((ap_predicate_op104_write_state3 == 1'b1)) begin
            stream_in_hresampled_din = p_s_fu_599_p4;
        end else begin
            stream_in_hresampled_din = 'bx;
        end
    end else begin
        stream_in_hresampled_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op110_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op104_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        stream_in_hresampled_write = 1'b1;
    end else begin
        stream_in_hresampled_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op52_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_in_vresampled_blk_n = stream_in_vresampled_empty_n;
    end else begin
        stream_in_vresampled_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op52_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_in_vresampled_read = 1'b1;
    end else begin
        stream_in_vresampled_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln724_fu_263_p2 = (ap_sig_allocacmp_x_3 + 13'd1);

assign add_ln863_1_fu_535_p2 = (add_ln863_fu_529_p2 + zext_ln863_fu_521_p1);

assign add_ln863_fu_529_p2 = (zext_ln863_1_fu_525_p1 + 9'd1);

assign add_ln865_1_fu_565_p2 = (add_ln865_fu_559_p2 + zext_ln865_fu_551_p1);

assign add_ln865_fu_559_p2 = (zext_ln865_1_fu_555_p1 + 9'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter2 == 1'b1) & (((ap_predicate_op110_write_state3 == 1'b1) & (stream_in_hresampled_full_n == 1'b0)) | ((ap_predicate_op104_write_state3 == 1'b1) & (stream_in_hresampled_full_n == 1'b0)))) | ((ap_predicate_op52_read_state2 == 1'b1) & (stream_in_vresampled_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter2 == 1'b1) & (((ap_predicate_op110_write_state3 == 1'b1) & (stream_in_hresampled_full_n == 1'b0)) | ((ap_predicate_op104_write_state3 == 1'b1) & (stream_in_hresampled_full_n == 1'b0)))) | ((ap_predicate_op52_read_state2 == 1'b1) & (stream_in_vresampled_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter2 == 1'b1) & (((ap_predicate_op110_write_state3 == 1'b1) & (stream_in_hresampled_full_n == 1'b0)) | ((ap_predicate_op104_write_state3 == 1'b1) & (stream_in_hresampled_full_n == 1'b0)))) | ((ap_predicate_op52_read_state2 == 1'b1) & (stream_in_vresampled_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((ap_predicate_op52_read_state2 == 1'b1) & (stream_in_vresampled_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = (((ap_predicate_op110_write_state3 == 1'b1) & (stream_in_hresampled_full_n == 1'b0)) | ((ap_predicate_op104_write_state3 == 1'b1) & (stream_in_hresampled_full_n == 1'b0)));
end

always @ (*) begin
    ap_condition_538 = ((icmp_ln732_reg_789 == 1'd1) & (icmp_ln724_reg_767 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_predicate_op104_write_state3 = ((p_read == 1'd0) & (tmp_reg_803_pp0_iter1_reg == 1'd0) & (icmp_ln724_reg_767_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op110_write_state3 = ((p_read == 1'd1) & (tmp_reg_803_pp0_iter1_reg == 1'd0) & (icmp_ln724_reg_767_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op52_read_state2 = ((icmp_ln732_reg_789 == 1'd1) & (icmp_ln724_reg_767 == 1'd0));
end

assign cmp150_i_fu_293_p2 = ((ap_sig_allocacmp_x_3 == 13'd1) ? 1'b1 : 1'b0);

assign icmp_ln724_fu_257_p2 = ((ap_sig_allocacmp_x_3 == loopWidth) ? 1'b1 : 1'b0);

assign icmp_ln732_fu_287_p2 = ((ap_sig_allocacmp_x_3 < zext_ln720_cast_fu_216_p1) ? 1'b1 : 1'b0);

assign odd_col_fu_283_p1 = out_x_fu_277_p2[0:0];

assign out_x_fu_277_p2 = (zext_ln730_fu_269_p1 - select_ln685_cast_fu_220_p1);

assign p_0_fu_622_p4 = {{{p_0_2_0_0_0741_i_out_i}, {p_0_1_0_0_0739_i_out_i}}, {p_0_0_0_0_0536737_i_out_i}};

assign p_s_fu_599_p4 = {{{select_ln688_fu_581_p3}, {select_ln688_1_fu_588_p3}}, {pixbuf_y_6_out_i}};

assign pixbuf_y_5_out = pixbuf_y_5_fu_122;

assign pixbuf_y_7_out = pixbuf_y_7_fu_130;

assign pixbuf_y_8_out = pixbuf_y_8_fu_134;

assign pixbuf_y_9_out = pixbuf_y_9_fu_138;

assign select_ln685_cast_fu_220_p1 = select_ln685;

assign select_ln688_1_fu_588_p3 = ((odd_col_reg_783_pp0_iter1_reg[0:0] == 1'b1) ? trunc_ln1_fu_541_p4 : select_ln814_5_fu_514_p3);

assign select_ln688_fu_581_p3 = ((odd_col_reg_783_pp0_iter1_reg[0:0] == 1'b1) ? trunc_ln2_fu_571_p4 : select_ln814_4_fu_507_p3);

assign select_ln746_1_fu_351_p3 = ((trunc_ln730_reg_771[0:0] == 1'b1) ? p_0_1_0_0_0747_i_out_i : trunc_ln734_2_fu_324_p4);

assign select_ln746_fu_344_p3 = ((trunc_ln730_reg_771[0:0] == 1'b1) ? trunc_ln734_2_fu_324_p4 : p_0_1_0_0_0751_i_out_i);

assign select_ln792_1_fu_444_p3 = ((trunc_ln730_reg_771_pp0_iter1_reg[0:0] == 1'b1) ? p_0_1_0_0_0747_i_out_i : p_0_1_0_0_0744792_i_out_i);

assign select_ln792_2_fu_451_p3 = ((trunc_ln730_reg_771_pp0_iter1_reg[0:0] == 1'b1) ? p_0_1_0_0_0748795_i_out_i : p_out_i);

assign select_ln792_3_fu_458_p3 = ((trunc_ln730_reg_771_pp0_iter1_reg[0:0] == 1'b1) ? p_0_1_0_0_0744792_i_out_i : p_out1_i);

assign select_ln792_4_fu_465_p3 = ((trunc_ln730_reg_771_pp0_iter1_reg[0:0] == 1'b1) ? p_out_i : p_0_0_0785_i_out_i);

assign select_ln792_5_fu_472_p3 = ((trunc_ln730_reg_771_pp0_iter1_reg[0:0] == 1'b1) ? p_out1_i : p_0_0_0480782_i_out_i);

assign select_ln792_fu_437_p3 = ((trunc_ln730_reg_771_pp0_iter1_reg[0:0] == 1'b1) ? p_0_1_0_0_0751_i_out_i : p_0_1_0_0_0748795_i_out_i);

assign select_ln814_1_fu_486_p3 = ((cmp150_i_reg_793_pp0_iter1_reg[0:0] == 1'b1) ? p_0_1_0_0_0747_i_out_i : select_ln792_1_fu_444_p3);

assign select_ln814_2_fu_493_p3 = ((cmp150_i_reg_793_pp0_iter1_reg[0:0] == 1'b1) ? p_0_1_0_0_0751_i_out_i : select_ln792_2_fu_451_p3);

assign select_ln814_3_fu_500_p3 = ((cmp150_i_reg_793_pp0_iter1_reg[0:0] == 1'b1) ? p_0_1_0_0_0747_i_out_i : select_ln792_3_fu_458_p3);

assign select_ln814_4_fu_507_p3 = ((cmp150_i_reg_793_pp0_iter1_reg[0:0] == 1'b1) ? p_0_1_0_0_0751_i_out_i : select_ln792_4_fu_465_p3);

assign select_ln814_5_fu_514_p3 = ((cmp150_i_reg_793_pp0_iter1_reg[0:0] == 1'b1) ? p_0_1_0_0_0747_i_out_i : select_ln792_5_fu_472_p3);

assign select_ln814_fu_479_p3 = ((cmp150_i_reg_793_pp0_iter1_reg[0:0] == 1'b1) ? p_0_1_0_0_0751_i_out_i : select_ln792_fu_437_p3);

assign trunc_ln1_fu_541_p4 = {{add_ln863_1_fu_535_p2[8:1]}};

assign trunc_ln2_fu_571_p4 = {{add_ln865_1_fu_565_p2[8:1]}};

assign trunc_ln730_fu_273_p1 = ap_sig_allocacmp_x_3[0:0];

assign trunc_ln734_2_fu_324_p4 = {{stream_in_vresampled_dout[15:8]}};

assign trunc_ln734_fu_320_p1 = stream_in_vresampled_dout[7:0];

assign zext_ln720_cast_fu_216_p1 = zext_ln720;

assign zext_ln730_fu_269_p1 = ap_sig_allocacmp_x_3;

assign zext_ln863_1_fu_525_p1 = select_ln814_5_fu_514_p3;

assign zext_ln863_fu_521_p1 = select_ln814_3_fu_500_p3;

assign zext_ln865_1_fu_555_p1 = select_ln814_4_fu_507_p3;

assign zext_ln865_fu_551_p1 = select_ln814_2_fu_493_p3;

endmodule //bd_85a6_csc_0_v_hcresampler_core_2_Pipeline_VITIS_LOOP_724_2
