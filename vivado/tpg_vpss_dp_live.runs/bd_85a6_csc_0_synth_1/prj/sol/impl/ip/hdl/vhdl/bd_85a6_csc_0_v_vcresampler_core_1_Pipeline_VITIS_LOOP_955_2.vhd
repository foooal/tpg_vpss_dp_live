-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity bd_85a6_csc_0_v_vcresampler_core_1_Pipeline_VITIS_LOOP_955_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    stream_in_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    stream_in_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    stream_in_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    stream_in_empty_n : IN STD_LOGIC;
    stream_in_read : OUT STD_LOGIC;
    stream_in_vresampled_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    stream_in_vresampled_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    stream_in_vresampled_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    stream_in_vresampled_full_n : IN STD_LOGIC;
    stream_in_vresampled_write : OUT STD_LOGIC;
    loopWidth : IN STD_LOGIC_VECTOR (11 downto 0);
    out_y_cast_i : IN STD_LOGIC_VECTOR (0 downto 0);
    cmp393_i : IN STD_LOGIC_VECTOR (0 downto 0);
    linebuf_y_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    linebuf_y_ce0 : OUT STD_LOGIC;
    linebuf_y_we0 : OUT STD_LOGIC;
    linebuf_y_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    linebuf_y_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    linebuf_y_ce1 : OUT STD_LOGIC;
    linebuf_y_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    linebuf_y_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    linebuf_y_1_ce0 : OUT STD_LOGIC;
    linebuf_y_1_we0 : OUT STD_LOGIC;
    linebuf_y_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    linebuf_y_1_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    cmp105_i : IN STD_LOGIC_VECTOR (0 downto 0);
    linebuf_c_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    linebuf_c_ce0 : OUT STD_LOGIC;
    linebuf_c_we0 : OUT STD_LOGIC;
    linebuf_c_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    linebuf_c_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    linebuf_c_ce1 : OUT STD_LOGIC;
    linebuf_c_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    linebuf_c_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    linebuf_c_1_ce0 : OUT STD_LOGIC;
    linebuf_c_1_we0 : OUT STD_LOGIC;
    linebuf_c_1_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    linebuf_c_1_address1 : OUT STD_LOGIC_VECTOR (11 downto 0);
    linebuf_c_1_ce1 : OUT STD_LOGIC;
    linebuf_c_1_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    y_cast2_i : IN STD_LOGIC_VECTOR (0 downto 0);
    cmp33_i : IN STD_LOGIC_VECTOR (0 downto 0);
    p_read : IN STD_LOGIC_VECTOR (0 downto 0);
    p_0_1_0_0_0607_i_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_1_0_0_0607_i_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_1_0_0_0607_i_out_o_ap_vld : OUT STD_LOGIC;
    p_0_0_0_0_0423605_i_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_0423605_i_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_0423605_i_out_o_ap_vld : OUT STD_LOGIC;
    p_0_2_0_0_0603_i_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_2_0_0_0603_i_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_2_0_0_0603_i_out_o_ap_vld : OUT STD_LOGIC;
    p_0_1_0_0_0601_i_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_1_0_0_0601_i_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_1_0_0_0601_i_out_o_ap_vld : OUT STD_LOGIC;
    p_0_0_0_0_0423599_i_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_0423599_i_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_0423599_i_out_o_ap_vld : OUT STD_LOGIC );
end;


architecture behav of bd_85a6_csc_0_v_vcresampler_core_1_Pipeline_VITIS_LOOP_955_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv12_1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal icmp_ln955_reg_459 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op33_read_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_predicate_op72_write_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_predicate_op84_write_state4 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln955_fu_229_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal stream_in_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal stream_in_vresampled_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal out_x_1_reg_454 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln955_reg_459_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln955_reg_459_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal linebuf_y_addr_reg_463 : STD_LOGIC_VECTOR (11 downto 0);
    signal linebuf_y_1_addr_reg_469 : STD_LOGIC_VECTOR (11 downto 0);
    signal linebuf_c_addr_reg_474 : STD_LOGIC_VECTOR (11 downto 0);
    signal linebuf_c_1_addr_reg_480 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln1024_fu_320_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1024_reg_491 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln1036_fu_332_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_condition_exit_pp0_iter1_stage0 : STD_LOGIC;
    signal ap_phi_reg_pp0_iter0_empty_reg_212 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_empty_reg_212 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter2_empty_reg_212 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter3_empty_reg_212 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln955_fu_246_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln965_fu_253_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal out_x_fu_90 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln955_fu_235_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_out_x_1 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_0_fu_359_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal zext_ln1129_fu_413_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln1110_fu_370_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1110_fu_377_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1110_1_fu_373_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1110_1_fu_383_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln_fu_389_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal empty_75_fu_399_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_1_i_fu_405_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0 : BOOLEAN;
    signal ap_predicate_op44_load_state2 : BOOLEAN;
    signal ap_enable_operation_44 : BOOLEAN;
    signal ap_enable_state2_pp0_iter1_stage0 : BOOLEAN;
    signal ap_predicate_op51_load_state3 : BOOLEAN;
    signal ap_enable_operation_51 : BOOLEAN;
    signal ap_enable_state3_pp0_iter2_stage0 : BOOLEAN;
    signal ap_enable_operation_56 : BOOLEAN;
    signal ap_enable_operation_48 : BOOLEAN;
    signal ap_enable_operation_54 : BOOLEAN;
    signal ap_predicate_op63_store_state3 : BOOLEAN;
    signal ap_enable_operation_63 : BOOLEAN;
    signal ap_predicate_op49_load_state2 : BOOLEAN;
    signal ap_enable_operation_49 : BOOLEAN;
    signal ap_predicate_op55_load_state3 : BOOLEAN;
    signal ap_enable_operation_55 : BOOLEAN;
    signal ap_predicate_op66_store_state3 : BOOLEAN;
    signal ap_enable_operation_66 : BOOLEAN;
    signal ap_enable_operation_57 : BOOLEAN;
    signal ap_enable_operation_52 : BOOLEAN;
    signal ap_enable_operation_74 : BOOLEAN;
    signal ap_enable_state4_pp0_iter3_stage0 : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component bd_85a6_csc_0_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    flow_control_loop_pipe_sequential_init_U : component bd_85a6_csc_0_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter1_stage0)) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter3_empty_reg_212_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                if (((icmp_ln955_reg_459_pp0_iter1_reg = ap_const_lv1_0) and (y_cast2_i = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter3_empty_reg_212 <= linebuf_c_q1;
                elsif (((icmp_ln955_reg_459_pp0_iter1_reg = ap_const_lv1_0) and (y_cast2_i = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter3_empty_reg_212 <= select_ln1036_fu_332_p3;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter3_empty_reg_212 <= ap_phi_reg_pp0_iter2_empty_reg_212;
                end if;
            end if; 
        end if;
    end process;

    out_x_fu_90_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln955_fu_229_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    out_x_fu_90 <= add_ln955_fu_235_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    out_x_fu_90 <= ap_const_lv12_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                icmp_ln955_reg_459 <= icmp_ln955_fu_229_p2;
                icmp_ln955_reg_459_pp0_iter1_reg <= icmp_ln955_reg_459;
                out_x_1_reg_454 <= ap_sig_allocacmp_out_x_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter1_empty_reg_212 <= ap_phi_reg_pp0_iter0_empty_reg_212;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_phi_reg_pp0_iter2_empty_reg_212 <= ap_phi_reg_pp0_iter1_empty_reg_212;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln955_reg_459_pp0_iter2_reg <= icmp_ln955_reg_459_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln955_reg_459 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                linebuf_c_1_addr_reg_480 <= zext_ln955_fu_246_p1(12 - 1 downto 0);
                linebuf_c_addr_reg_474 <= zext_ln955_fu_246_p1(12 - 1 downto 0);
                linebuf_y_1_addr_reg_469 <= zext_ln955_fu_246_p1(12 - 1 downto 0);
                linebuf_y_addr_reg_463 <= zext_ln955_fu_246_p1(12 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln955_reg_459_pp0_iter1_reg = ap_const_lv1_0))) then
                select_ln1024_reg_491 <= select_ln1024_fu_320_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln1110_1_fu_383_p2 <= std_logic_vector(unsigned(add_ln1110_fu_377_p2) + unsigned(zext_ln1110_1_fu_373_p1));
    add_ln1110_fu_377_p2 <= std_logic_vector(unsigned(zext_ln1110_fu_370_p1) + unsigned(ap_const_lv9_1));
    add_ln955_fu_235_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_out_x_1) + unsigned(ap_const_lv12_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);

    ap_block_pp0_assign_proc : process(ap_CS_fsm, ap_block_pp0_stage0_subdone)
    begin
                ap_block_pp0 <= ((ap_ST_fsm_pp0_stage0 = ap_CS_fsm) and (ap_const_boolean_1 = ap_block_pp0_stage0_subdone));
    end process;

        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, stream_in_empty_n, ap_predicate_op33_read_state2, stream_in_vresampled_full_n, ap_predicate_op72_write_state3, ap_predicate_op84_write_state4)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_predicate_op84_write_state4 = ap_const_boolean_1) and (stream_in_vresampled_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_predicate_op72_write_state3 = ap_const_boolean_1) and (stream_in_vresampled_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_predicate_op33_read_state2 = ap_const_boolean_1) and (stream_in_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, stream_in_empty_n, ap_predicate_op33_read_state2, stream_in_vresampled_full_n, ap_predicate_op72_write_state3, ap_predicate_op84_write_state4)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_predicate_op84_write_state4 = ap_const_boolean_1) and (stream_in_vresampled_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_predicate_op72_write_state3 = ap_const_boolean_1) and (stream_in_vresampled_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_predicate_op33_read_state2 = ap_const_boolean_1) and (stream_in_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, stream_in_empty_n, ap_predicate_op33_read_state2, stream_in_vresampled_full_n, ap_predicate_op72_write_state3, ap_predicate_op84_write_state4)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_predicate_op84_write_state4 = ap_const_boolean_1) and (stream_in_vresampled_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_predicate_op72_write_state3 = ap_const_boolean_1) and (stream_in_vresampled_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_predicate_op33_read_state2 = ap_const_boolean_1) and (stream_in_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage0_iter1_assign_proc : process(stream_in_empty_n, ap_predicate_op33_read_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((ap_predicate_op33_read_state2 = ap_const_boolean_1) and (stream_in_empty_n = ap_const_logic_0));
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(stream_in_vresampled_full_n, ap_predicate_op72_write_state3)
    begin
                ap_block_state3_pp0_stage0_iter2 <= ((ap_predicate_op72_write_state3 = ap_const_boolean_1) and (stream_in_vresampled_full_n = ap_const_logic_0));
    end process;


    ap_block_state4_pp0_stage0_iter3_assign_proc : process(stream_in_vresampled_full_n, ap_predicate_op84_write_state4)
    begin
                ap_block_state4_pp0_stage0_iter3 <= ((ap_predicate_op84_write_state4 = ap_const_boolean_1) and (stream_in_vresampled_full_n = ap_const_logic_0));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln955_fu_229_p2)
    begin
        if (((icmp_ln955_fu_229_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln955_reg_459, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln955_reg_459 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter1_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_enable_operation_44_assign_proc : process(ap_predicate_op44_load_state2)
    begin
                ap_enable_operation_44 <= (ap_predicate_op44_load_state2 = ap_const_boolean_1);
    end process;


    ap_enable_operation_48_assign_proc : process(icmp_ln955_reg_459)
    begin
                ap_enable_operation_48 <= (icmp_ln955_reg_459 = ap_const_lv1_0);
    end process;


    ap_enable_operation_49_assign_proc : process(ap_predicate_op49_load_state2)
    begin
                ap_enable_operation_49 <= (ap_predicate_op49_load_state2 = ap_const_boolean_1);
    end process;


    ap_enable_operation_51_assign_proc : process(ap_predicate_op51_load_state3)
    begin
                ap_enable_operation_51 <= (ap_predicate_op51_load_state3 = ap_const_boolean_1);
    end process;


    ap_enable_operation_52_assign_proc : process(icmp_ln955_reg_459_pp0_iter1_reg)
    begin
                ap_enable_operation_52 <= (icmp_ln955_reg_459_pp0_iter1_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_54_assign_proc : process(icmp_ln955_reg_459_pp0_iter1_reg)
    begin
                ap_enable_operation_54 <= (icmp_ln955_reg_459_pp0_iter1_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_55_assign_proc : process(ap_predicate_op55_load_state3)
    begin
                ap_enable_operation_55 <= (ap_predicate_op55_load_state3 = ap_const_boolean_1);
    end process;


    ap_enable_operation_56_assign_proc : process(icmp_ln955_reg_459_pp0_iter1_reg)
    begin
                ap_enable_operation_56 <= (icmp_ln955_reg_459_pp0_iter1_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_57_assign_proc : process(icmp_ln955_reg_459_pp0_iter1_reg)
    begin
                ap_enable_operation_57 <= (icmp_ln955_reg_459_pp0_iter1_reg = ap_const_lv1_0);
    end process;


    ap_enable_operation_63_assign_proc : process(ap_predicate_op63_store_state3)
    begin
                ap_enable_operation_63 <= (ap_predicate_op63_store_state3 = ap_const_boolean_1);
    end process;


    ap_enable_operation_66_assign_proc : process(ap_predicate_op66_store_state3)
    begin
                ap_enable_operation_66 <= (ap_predicate_op66_store_state3 = ap_const_boolean_1);
    end process;


    ap_enable_operation_74_assign_proc : process(icmp_ln955_reg_459_pp0_iter2_reg)
    begin
                ap_enable_operation_74 <= (icmp_ln955_reg_459_pp0_iter2_reg = ap_const_lv1_0);
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_enable_state2_pp0_iter1_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1)
    begin
                ap_enable_state2_pp0_iter1_stage0 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state3_pp0_iter2_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter2)
    begin
                ap_enable_state3_pp0_iter2_stage0 <= ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_enable_state4_pp0_iter3_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3)
    begin
                ap_enable_state4_pp0_iter3_stage0 <= ((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;
    ap_phi_reg_pp0_iter0_empty_reg_212 <= "XXXXXXXX";

    ap_predicate_op33_read_state2_assign_proc : process(icmp_ln955_reg_459, cmp33_i)
    begin
                ap_predicate_op33_read_state2 <= ((cmp33_i = ap_const_lv1_1) and (icmp_ln955_reg_459 = ap_const_lv1_0));
    end process;


    ap_predicate_op44_load_state2_assign_proc : process(icmp_ln955_reg_459, cmp105_i)
    begin
                ap_predicate_op44_load_state2 <= ((icmp_ln955_reg_459 = ap_const_lv1_0) and (cmp105_i = ap_const_lv1_1));
    end process;


    ap_predicate_op49_load_state2_assign_proc : process(icmp_ln955_reg_459, y_cast2_i)
    begin
                ap_predicate_op49_load_state2 <= ((icmp_ln955_reg_459 = ap_const_lv1_0) and (y_cast2_i = ap_const_lv1_1));
    end process;


    ap_predicate_op51_load_state3_assign_proc : process(cmp105_i, icmp_ln955_reg_459_pp0_iter1_reg)
    begin
                ap_predicate_op51_load_state3 <= ((icmp_ln955_reg_459_pp0_iter1_reg = ap_const_lv1_0) and (cmp105_i = ap_const_lv1_1));
    end process;


    ap_predicate_op55_load_state3_assign_proc : process(y_cast2_i, icmp_ln955_reg_459_pp0_iter1_reg)
    begin
                ap_predicate_op55_load_state3 <= ((icmp_ln955_reg_459_pp0_iter1_reg = ap_const_lv1_0) and (y_cast2_i = ap_const_lv1_1));
    end process;


    ap_predicate_op63_store_state3_assign_proc : process(y_cast2_i, cmp33_i)
    begin
                ap_predicate_op63_store_state3 <= ((cmp33_i = ap_const_lv1_1) and (y_cast2_i = ap_const_lv1_0));
    end process;


    ap_predicate_op66_store_state3_assign_proc : process(y_cast2_i, icmp_ln955_reg_459_pp0_iter1_reg)
    begin
                ap_predicate_op66_store_state3 <= ((icmp_ln955_reg_459_pp0_iter1_reg = ap_const_lv1_0) and (y_cast2_i = ap_const_lv1_0));
    end process;


    ap_predicate_op72_write_state3_assign_proc : process(cmp393_i, p_read)
    begin
                ap_predicate_op72_write_state3 <= ((p_read = ap_const_lv1_1) and (cmp393_i = ap_const_lv1_1));
    end process;


    ap_predicate_op84_write_state4_assign_proc : process(cmp393_i, p_read)
    begin
                ap_predicate_op84_write_state4 <= ((p_read = ap_const_lv1_0) and (cmp393_i = ap_const_lv1_1));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_out_x_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, out_x_fu_90, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_out_x_1 <= ap_const_lv12_0;
        else 
            ap_sig_allocacmp_out_x_1 <= out_x_fu_90;
        end if; 
    end process;

    empty_75_fu_399_p3 <= 
        trunc_ln_fu_389_p4 when (out_y_cast_i(0) = '1') else 
        select_ln1024_reg_491;
    icmp_ln955_fu_229_p2 <= "1" when (ap_sig_allocacmp_out_x_1 = loopWidth) else "0";
    linebuf_c_1_address0 <= linebuf_c_1_addr_reg_480;
    linebuf_c_1_address1 <= zext_ln955_fu_246_p1(12 - 1 downto 0);

    linebuf_c_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            linebuf_c_1_ce0 <= ap_const_logic_1;
        else 
            linebuf_c_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    linebuf_c_1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            linebuf_c_1_ce1 <= ap_const_logic_1;
        else 
            linebuf_c_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    linebuf_c_1_d0 <= 
        select_ln1024_fu_320_p3 when (cmp105_i(0) = '1') else 
        select_ln1036_fu_332_p3;

    linebuf_c_1_we0_assign_proc : process(ap_enable_reg_pp0_iter2, y_cast2_i, ap_block_pp0_stage0_11001, icmp_ln955_reg_459_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln955_reg_459_pp0_iter1_reg = ap_const_lv1_0) and (y_cast2_i = ap_const_lv1_0))) then 
            linebuf_c_1_we0 <= ap_const_logic_1;
        else 
            linebuf_c_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    linebuf_c_address0 <= linebuf_c_addr_reg_474;
    linebuf_c_address1 <= zext_ln955_fu_246_p1(12 - 1 downto 0);

    linebuf_c_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            linebuf_c_ce0 <= ap_const_logic_1;
        else 
            linebuf_c_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    linebuf_c_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            linebuf_c_ce1 <= ap_const_logic_1;
        else 
            linebuf_c_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    linebuf_c_d0 <= p_0_1_0_0_0607_i_out_i;

    linebuf_c_we0_assign_proc : process(ap_enable_reg_pp0_iter2, y_cast2_i, cmp33_i, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp33_i = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (y_cast2_i = ap_const_lv1_0))) then 
            linebuf_c_we0 <= ap_const_logic_1;
        else 
            linebuf_c_we0 <= ap_const_logic_0;
        end if; 
    end process;

    linebuf_y_1_address0 <= linebuf_y_1_addr_reg_469;

    linebuf_y_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, icmp_ln955_reg_459_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln955_reg_459_pp0_iter1_reg = ap_const_lv1_0))) then 
            linebuf_y_1_ce0 <= ap_const_logic_1;
        else 
            linebuf_y_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    linebuf_y_1_d0 <= 
        linebuf_y_q1 when (cmp105_i(0) = '1') else 
        p_0_0_0_0_0423605_i_out_i;

    linebuf_y_1_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, icmp_ln955_reg_459_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln955_reg_459_pp0_iter1_reg = ap_const_lv1_0))) then 
            linebuf_y_1_we0 <= ap_const_logic_1;
        else 
            linebuf_y_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    linebuf_y_address0 <= linebuf_y_addr_reg_463;
    linebuf_y_address1 <= zext_ln955_fu_246_p1(12 - 1 downto 0);

    linebuf_y_ce0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            linebuf_y_ce0 <= ap_const_logic_1;
        else 
            linebuf_y_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    linebuf_y_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            linebuf_y_ce1 <= ap_const_logic_1;
        else 
            linebuf_y_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    linebuf_y_d0 <= p_0_0_0_0_0423605_i_out_i;

    linebuf_y_we0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0_11001, icmp_ln955_reg_459_pp0_iter1_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln955_reg_459_pp0_iter1_reg = ap_const_lv1_0))) then 
            linebuf_y_we0 <= ap_const_logic_1;
        else 
            linebuf_y_we0 <= ap_const_logic_0;
        end if; 
    end process;


    p_0_0_0_0_0423599_i_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln955_reg_459, cmp33_i, p_0_0_0_0_0423599_i_out_i, ap_block_pp0_stage0, trunc_ln965_fu_253_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (cmp33_i = ap_const_lv1_1) and (icmp_ln955_reg_459 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_0_0_0_0423599_i_out_o <= trunc_ln965_fu_253_p1;
        else 
            p_0_0_0_0_0423599_i_out_o <= p_0_0_0_0_0423599_i_out_i;
        end if; 
    end process;


    p_0_0_0_0_0423599_i_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln955_reg_459, cmp33_i, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp33_i = ap_const_lv1_1) and (icmp_ln955_reg_459 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_0_0_0_0423599_i_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0_0_0423599_i_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_0_0_0_0423605_i_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln955_reg_459, cmp33_i, p_0_0_0_0_0423605_i_out_i, ap_block_pp0_stage0, trunc_ln965_fu_253_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (cmp33_i = ap_const_lv1_1) and (icmp_ln955_reg_459 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_0_0_0_0423605_i_out_o <= trunc_ln965_fu_253_p1;
        else 
            p_0_0_0_0_0423605_i_out_o <= p_0_0_0_0_0423605_i_out_i;
        end if; 
    end process;


    p_0_0_0_0_0423605_i_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln955_reg_459, cmp33_i, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp33_i = ap_const_lv1_1) and (icmp_ln955_reg_459 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_0_0_0_0423605_i_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0_0_0423605_i_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_1_0_0_0601_i_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, stream_in_dout, icmp_ln955_reg_459, cmp33_i, p_0_1_0_0_0601_i_out_i, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (cmp33_i = ap_const_lv1_1) and (icmp_ln955_reg_459 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_1_0_0_0601_i_out_o <= stream_in_dout(15 downto 8);
        else 
            p_0_1_0_0_0601_i_out_o <= p_0_1_0_0_0601_i_out_i;
        end if; 
    end process;


    p_0_1_0_0_0601_i_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln955_reg_459, cmp33_i, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp33_i = ap_const_lv1_1) and (icmp_ln955_reg_459 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_1_0_0_0601_i_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_1_0_0_0601_i_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_1_0_0_0607_i_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, stream_in_dout, icmp_ln955_reg_459, cmp33_i, p_0_1_0_0_0607_i_out_i, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (cmp33_i = ap_const_lv1_1) and (icmp_ln955_reg_459 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_1_0_0_0607_i_out_o <= stream_in_dout(15 downto 8);
        else 
            p_0_1_0_0_0607_i_out_o <= p_0_1_0_0_0607_i_out_i;
        end if; 
    end process;


    p_0_1_0_0_0607_i_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln955_reg_459, cmp33_i, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp33_i = ap_const_lv1_1) and (icmp_ln955_reg_459 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_1_0_0_0607_i_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_1_0_0_0607_i_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_2_0_0_0603_i_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, stream_in_dout, icmp_ln955_reg_459, cmp33_i, p_0_2_0_0_0603_i_out_i, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (cmp33_i = ap_const_lv1_1) and (icmp_ln955_reg_459 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_2_0_0_0603_i_out_o <= stream_in_dout(23 downto 16);
        else 
            p_0_2_0_0_0603_i_out_o <= p_0_2_0_0_0603_i_out_i;
        end if; 
    end process;


    p_0_2_0_0_0603_i_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln955_reg_459, cmp33_i, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp33_i = ap_const_lv1_1) and (icmp_ln955_reg_459 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_2_0_0_0603_i_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_2_0_0_0603_i_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_0_fu_359_p4 <= ((p_0_2_0_0_0603_i_out_i & p_0_1_0_0_0601_i_out_i) & p_0_0_0_0_0423599_i_out_i);
    select_ln1024_fu_320_p3 <= 
        linebuf_c_1_q1 when (y_cast2_i(0) = '1') else 
        linebuf_c_q1;
    select_ln1036_fu_332_p3 <= 
        p_0_1_0_0_0607_i_out_i when (cmp33_i(0) = '1') else 
        select_ln1024_fu_320_p3;

    stream_in_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, stream_in_empty_n, ap_predicate_op33_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op33_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_in_blk_n <= stream_in_empty_n;
        else 
            stream_in_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    stream_in_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op33_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op33_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_in_read <= ap_const_logic_1;
        else 
            stream_in_read <= ap_const_logic_0;
        end if; 
    end process;


    stream_in_vresampled_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, stream_in_vresampled_full_n, ap_predicate_op72_write_state3, ap_predicate_op84_write_state4, ap_block_pp0_stage0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op84_write_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op72_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            stream_in_vresampled_blk_n <= stream_in_vresampled_full_n;
        else 
            stream_in_vresampled_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    stream_in_vresampled_din_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_predicate_op72_write_state3, ap_predicate_op84_write_state4, p_0_fu_359_p4, ap_block_pp0_stage0_01001, zext_ln1129_fu_413_p1)
    begin
        if ((ap_const_boolean_0 = ap_block_pp0_stage0_01001)) then
            if (((ap_predicate_op84_write_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                stream_in_vresampled_din <= zext_ln1129_fu_413_p1;
            elsif (((ap_predicate_op72_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                stream_in_vresampled_din <= p_0_fu_359_p4;
            else 
                stream_in_vresampled_din <= "XXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            stream_in_vresampled_din <= "XXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stream_in_vresampled_write_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_predicate_op72_write_state3, ap_predicate_op84_write_state4, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op84_write_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op72_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            stream_in_vresampled_write <= ap_const_logic_1;
        else 
            stream_in_vresampled_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_1_i_fu_405_p3 <= (empty_75_fu_399_p3 & linebuf_y_1_q0);
    trunc_ln965_fu_253_p1 <= stream_in_dout(8 - 1 downto 0);
    trunc_ln_fu_389_p4 <= add_ln1110_1_fu_383_p2(8 downto 1);
    zext_ln1110_1_fu_373_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_reg_pp0_iter3_empty_reg_212),9));
    zext_ln1110_fu_370_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln1024_reg_491),9));
    zext_ln1129_fu_413_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_i_fu_405_p3),24));
    zext_ln955_fu_246_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(out_x_1_reg_454),64));
end behav;
