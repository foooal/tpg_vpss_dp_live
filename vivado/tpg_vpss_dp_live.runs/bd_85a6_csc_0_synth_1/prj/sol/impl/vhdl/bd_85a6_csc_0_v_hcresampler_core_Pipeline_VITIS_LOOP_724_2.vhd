-- ==============================================================
-- Generated by Vitis HLS v2023.1
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity bd_85a6_csc_0_v_hcresampler_core_Pipeline_VITIS_LOOP_724_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    stream_csc_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    stream_csc_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    stream_csc_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    stream_csc_empty_n : IN STD_LOGIC;
    stream_csc_read : OUT STD_LOGIC;
    stream_out_hresampled_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    stream_out_hresampled_num_data_valid : IN STD_LOGIC_VECTOR (4 downto 0);
    stream_out_hresampled_fifo_cap : IN STD_LOGIC_VECTOR (4 downto 0);
    stream_out_hresampled_full_n : IN STD_LOGIC;
    stream_out_hresampled_write : OUT STD_LOGIC;
    pixbuf_y_19 : IN STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_18 : IN STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_17 : IN STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_0536742_lcssa768_i : IN STD_LOGIC_VECTOR (7 downto 0);
    loopWidth : IN STD_LOGIC_VECTOR (12 downto 0);
    p_cast17_i : IN STD_LOGIC_VECTOR (0 downto 0);
    select_ln685 : IN STD_LOGIC_VECTOR (1 downto 0);
    zext_ln720 : IN STD_LOGIC_VECTOR (11 downto 0);
    p_read : IN STD_LOGIC_VECTOR (0 downto 0);
    pixbuf_y_24_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_24_out_ap_vld : OUT STD_LOGIC;
    pixbuf_y_23_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_23_out_ap_vld : OUT STD_LOGIC;
    pixbuf_y_22_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_22_out_ap_vld : OUT STD_LOGIC;
    pixbuf_y_21_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_21_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_21_out_o_ap_vld : OUT STD_LOGIC;
    pixbuf_y_20_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    pixbuf_y_20_out_ap_vld : OUT STD_LOGIC;
    p_0_1_0_0_0748795_i_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_1_0_0_0748795_i_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_1_0_0_0748795_i_out_o_ap_vld : OUT STD_LOGIC;
    p_0_1_0_0_0744792_i_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_1_0_0_0744792_i_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_1_0_0_0744792_i_out_o_ap_vld : OUT STD_LOGIC;
    p_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_out_o_ap_vld : OUT STD_LOGIC;
    p_out1_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_out1_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_out1_o_ap_vld : OUT STD_LOGIC;
    p_0_0_0785_i_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0785_i_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0785_i_out_o_ap_vld : OUT STD_LOGIC;
    p_0_0_0480782_i_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0480782_i_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0480782_i_out_o_ap_vld : OUT STD_LOGIC;
    p_0_1_0_0_0751_i_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_1_0_0_0751_i_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_1_0_0_0751_i_out_o_ap_vld : OUT STD_LOGIC;
    p_0_1_0_0_0747_i_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_1_0_0_0747_i_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_1_0_0_0747_i_out_o_ap_vld : OUT STD_LOGIC;
    p_0_2_0_0_0741_i_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_2_0_0_0741_i_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_2_0_0_0741_i_out_o_ap_vld : OUT STD_LOGIC;
    p_0_1_0_0_0739_i_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_1_0_0_0739_i_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_1_0_0_0739_i_out_o_ap_vld : OUT STD_LOGIC;
    p_0_0_0_0_0536737_i_out_i : IN STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_0536737_i_out_o : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_0_0_0_0_0536737_i_out_o_ap_vld : OUT STD_LOGIC;
    filt_res1_1_out_i : IN STD_LOGIC_VECTOR (63 downto 0);
    filt_res1_1_out_o : OUT STD_LOGIC_VECTOR (63 downto 0);
    filt_res1_1_out_o_ap_vld : OUT STD_LOGIC );
end;


architecture behav of bd_85a6_csc_0_v_hcresampler_core_Pipeline_VITIS_LOOP_724_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv9_2 : STD_LOGIC_VECTOR (8 downto 0) := "000000010";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal icmp_ln724_reg_810 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln732_reg_820 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op52_read_state2 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal icmp_ln724_reg_810_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_834 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_834_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op109_write_state3 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal tmp_reg_834_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_predicate_op127_write_state4 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal icmp_ln724_fu_291_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage0 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal stream_csc_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal stream_out_hresampled_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal p_cast17_i_cast_fu_250_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_cast17_i_cast_reg_805 : STD_LOGIC_VECTOR (1 downto 0);
    signal odd_col_fu_313_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal odd_col_reg_814 : STD_LOGIC_VECTOR (0 downto 0);
    signal odd_col_reg_814_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln732_fu_317_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp148_i_fu_323_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp148_i_reg_824 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp148_i_reg_824_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal pixbuf_y_6_reg_838 : STD_LOGIC_VECTOR (7 downto 0);
    signal pixbuf_y_7_reg_844 : STD_LOGIC_VECTOR (7 downto 0);
    signal pixbuf_y_8_reg_849 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln851_fu_610_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln851_reg_854 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_condition_exit_pp0_iter2_stage0 : STD_LOGIC;
    signal select_ln814_fu_449_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln814_1_fu_456_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln814_3_fu_470_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln814_5_fu_484_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln734_fu_342_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal filt_res1_fu_599_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal x_fu_138 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln724_fu_297_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_x_2 : STD_LOGIC_VECTOR (12 downto 0);
    signal pixbuf_y_1_fu_142 : STD_LOGIC_VECTOR (7 downto 0);
    signal pixbuf_y_2_fu_146 : STD_LOGIC_VECTOR (7 downto 0);
    signal pixbuf_y_3_fu_150 : STD_LOGIC_VECTOR (7 downto 0);
    signal pixbuf_y_4_fu_154 : STD_LOGIC_VECTOR (7 downto 0);
    signal pixbuf_y_5_fu_158 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_0_fu_629_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal zext_ln882_fu_726_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln730_fu_303_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln685_cast_fu_246_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal out_x_fu_307_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln720_cast_fu_242_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal select_ln814_4_fu_477_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln_fu_491_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln846_fu_507_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln846_fu_511_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln846_1_fu_517_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln845_fu_499_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln846_2_fu_521_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln845_1_fu_503_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln846_1_fu_527_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal select_ln814_2_fu_463_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln1_fu_543_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln849_fu_559_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln849_fu_563_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln848_1_fu_555_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln848_fu_551_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln849_2_fu_573_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln849_1_fu_569_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln849_1_fu_579_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal filt_res1_3_fu_585_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln847_fu_595_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln724_fu_606_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln3_fu_533_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i_fu_709_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_i_fu_719_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_condition_569 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component bd_85a6_csc_0_mux_4_2_8_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component bd_85a6_csc_0_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mux_4_2_8_1_1_U237 : component bd_85a6_csc_0_mux_4_2_8_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => pixbuf_y_21_out_i,
        din1 => pixbuf_y_6_reg_838,
        din2 => pixbuf_y_7_reg_844,
        din3 => pixbuf_y_8_reg_849,
        din4 => p_cast17_i_cast_reg_805,
        dout => tmp_i_fu_709_p6);

    flow_control_loop_pipe_sequential_init_U : component bd_85a6_csc_0_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage0,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter2_stage0)) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    pixbuf_y_1_fu_142_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    pixbuf_y_1_fu_142 <= pixbuf_y;
                elsif (((icmp_ln724_reg_810_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    pixbuf_y_1_fu_142 <= pixbuf_y_2_fu_146;
                end if;
            end if; 
        end if;
    end process;

    pixbuf_y_2_fu_146_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    pixbuf_y_2_fu_146 <= p_0_0_0_0_0536742_lcssa768_i;
                elsif ((ap_const_boolean_1 = ap_condition_569)) then 
                    pixbuf_y_2_fu_146 <= trunc_ln734_fu_342_p1;
                end if;
            end if; 
        end if;
    end process;

    pixbuf_y_3_fu_150_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    pixbuf_y_3_fu_150 <= pixbuf_y_17;
                elsif (((icmp_ln724_reg_810_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    pixbuf_y_3_fu_150 <= pixbuf_y_4_fu_154;
                end if;
            end if; 
        end if;
    end process;

    pixbuf_y_4_fu_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    pixbuf_y_4_fu_154 <= pixbuf_y_18;
                elsif (((icmp_ln724_reg_810_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    pixbuf_y_4_fu_154 <= pixbuf_y_5_fu_158;
                end if;
            end if; 
        end if;
    end process;

    pixbuf_y_5_fu_158_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                if (((ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    pixbuf_y_5_fu_158 <= pixbuf_y_19;
                elsif (((icmp_ln724_reg_810_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                    pixbuf_y_5_fu_158 <= pixbuf_y_1_fu_142;
                end if;
            end if; 
        end if;
    end process;

    x_fu_138_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((icmp_ln724_fu_291_p2 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                    x_fu_138 <= add_ln724_fu_297_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    x_fu_138 <= ap_const_lv13_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                cmp148_i_reg_824_pp0_iter1_reg <= cmp148_i_reg_824;
                icmp_ln724_reg_810 <= icmp_ln724_fu_291_p2;
                icmp_ln724_reg_810_pp0_iter1_reg <= icmp_ln724_reg_810;
                odd_col_reg_814_pp0_iter1_reg <= odd_col_reg_814;
                p_cast17_i_cast_reg_805 <= p_cast17_i_cast_fu_250_p3;
                tmp_reg_834_pp0_iter1_reg <= tmp_reg_834;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln724_fu_291_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                cmp148_i_reg_824 <= cmp148_i_fu_323_p2;
                icmp_ln732_reg_820 <= icmp_ln732_fu_317_p2;
                odd_col_reg_814 <= odd_col_fu_313_p1;
                tmp_reg_834 <= out_x_fu_307_p2(13 downto 13);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                pixbuf_y_6_reg_838 <= pixbuf_y_3_fu_150;
                pixbuf_y_7_reg_844 <= pixbuf_y_4_fu_154;
                pixbuf_y_8_reg_849 <= pixbuf_y_5_fu_158;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln724_reg_810_pp0_iter1_reg = ap_const_lv1_0))) then
                select_ln851_reg_854 <= select_ln851_fu_610_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                tmp_reg_834_pp0_iter2_reg <= tmp_reg_834_pp0_iter1_reg;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    add_ln724_fu_297_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_x_2) + unsigned(ap_const_lv13_1));
    add_ln846_1_fu_527_p2 <= std_logic_vector(unsigned(add_ln846_2_fu_521_p2) + unsigned(zext_ln845_1_fu_503_p1));
    add_ln846_2_fu_521_p2 <= std_logic_vector(unsigned(zext_ln846_1_fu_517_p1) + unsigned(zext_ln845_fu_499_p1));
    add_ln846_fu_511_p2 <= std_logic_vector(unsigned(zext_ln846_fu_507_p1) + unsigned(ap_const_lv9_2));
    add_ln849_1_fu_579_p2 <= std_logic_vector(unsigned(add_ln849_2_fu_573_p2) + unsigned(zext_ln849_1_fu_569_p1));
    add_ln849_2_fu_573_p2 <= std_logic_vector(unsigned(zext_ln848_1_fu_555_p1) + unsigned(zext_ln848_fu_551_p1));
    add_ln849_fu_563_p2 <= std_logic_vector(unsigned(zext_ln849_fu_559_p1) + unsigned(ap_const_lv9_2));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, stream_csc_empty_n, ap_predicate_op52_read_state2, stream_out_hresampled_full_n, ap_predicate_op109_write_state3, ap_predicate_op127_write_state4)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_predicate_op127_write_state4 = ap_const_boolean_1) and (stream_out_hresampled_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_predicate_op109_write_state3 = ap_const_boolean_1) and (stream_out_hresampled_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_predicate_op52_read_state2 = ap_const_boolean_1) and (stream_csc_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, stream_csc_empty_n, ap_predicate_op52_read_state2, stream_out_hresampled_full_n, ap_predicate_op109_write_state3, ap_predicate_op127_write_state4)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_predicate_op127_write_state4 = ap_const_boolean_1) and (stream_out_hresampled_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_predicate_op109_write_state3 = ap_const_boolean_1) and (stream_out_hresampled_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_predicate_op52_read_state2 = ap_const_boolean_1) and (stream_csc_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, stream_csc_empty_n, ap_predicate_op52_read_state2, stream_out_hresampled_full_n, ap_predicate_op109_write_state3, ap_predicate_op127_write_state4)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_predicate_op127_write_state4 = ap_const_boolean_1) and (stream_out_hresampled_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_predicate_op109_write_state3 = ap_const_boolean_1) and (stream_out_hresampled_full_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)) or ((ap_predicate_op52_read_state2 = ap_const_boolean_1) and (stream_csc_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)));
    end process;

        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage0_iter1_assign_proc : process(stream_csc_empty_n, ap_predicate_op52_read_state2)
    begin
                ap_block_state2_pp0_stage0_iter1 <= ((ap_predicate_op52_read_state2 = ap_const_boolean_1) and (stream_csc_empty_n = ap_const_logic_0));
    end process;


    ap_block_state3_pp0_stage0_iter2_assign_proc : process(stream_out_hresampled_full_n, ap_predicate_op109_write_state3)
    begin
                ap_block_state3_pp0_stage0_iter2 <= ((ap_predicate_op109_write_state3 = ap_const_boolean_1) and (stream_out_hresampled_full_n = ap_const_logic_0));
    end process;


    ap_block_state4_pp0_stage0_iter3_assign_proc : process(stream_out_hresampled_full_n, ap_predicate_op127_write_state4)
    begin
                ap_block_state4_pp0_stage0_iter3 <= ((ap_predicate_op127_write_state4 = ap_const_boolean_1) and (stream_out_hresampled_full_n = ap_const_logic_0));
    end process;


    ap_condition_569_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln724_reg_810, icmp_ln732_reg_820)
    begin
                ap_condition_569 <= ((icmp_ln732_reg_820 = ap_const_lv1_1) and (icmp_ln724_reg_810 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_condition_exit_pp0_iter0_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, icmp_ln724_fu_291_p2)
    begin
        if (((icmp_ln724_fu_291_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter2_stage0_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln724_reg_810_pp0_iter1_reg, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln724_reg_810_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_condition_exit_pp0_iter2_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter2_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter2_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start_int;

    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage0;

    ap_predicate_op109_write_state3_assign_proc : process(icmp_ln724_reg_810_pp0_iter1_reg, tmp_reg_834_pp0_iter1_reg, p_read)
    begin
                ap_predicate_op109_write_state3 <= ((p_read = ap_const_lv1_1) and (tmp_reg_834_pp0_iter1_reg = ap_const_lv1_0) and (icmp_ln724_reg_810_pp0_iter1_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op127_write_state4_assign_proc : process(tmp_reg_834_pp0_iter2_reg, p_read)
    begin
                ap_predicate_op127_write_state4 <= ((tmp_reg_834_pp0_iter2_reg = ap_const_lv1_0) and (p_read = ap_const_lv1_0));
    end process;


    ap_predicate_op52_read_state2_assign_proc : process(icmp_ln724_reg_810, icmp_ln732_reg_820)
    begin
                ap_predicate_op52_read_state2 <= ((icmp_ln732_reg_820 = ap_const_lv1_1) and (icmp_ln724_reg_810 = ap_const_lv1_0));
    end process;


    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_x_2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, x_fu_138, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_x_2 <= ap_const_lv13_0;
        else 
            ap_sig_allocacmp_x_2 <= x_fu_138;
        end if; 
    end process;

    cmp148_i_fu_323_p2 <= "1" when (ap_sig_allocacmp_x_2 = ap_const_lv13_0) else "0";

    filt_res1_1_out_o_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln724_reg_810_pp0_iter1_reg, filt_res1_1_out_i, ap_block_pp0_stage0, filt_res1_fu_599_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln724_reg_810_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            filt_res1_1_out_o <= filt_res1_fu_599_p3;
        else 
            filt_res1_1_out_o <= filt_res1_1_out_i;
        end if; 
    end process;


    filt_res1_1_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln724_reg_810_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln724_reg_810_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            filt_res1_1_out_o_ap_vld <= ap_const_logic_1;
        else 
            filt_res1_1_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    filt_res1_3_fu_585_p4 <= add_ln849_1_fu_579_p2(9 downto 2);
    filt_res1_fu_599_p3 <= 
        filt_res1_1_out_i when (odd_col_reg_814_pp0_iter1_reg(0) = '1') else 
        zext_ln847_fu_595_p1;
    icmp_ln724_fu_291_p2 <= "1" when (ap_sig_allocacmp_x_2 = loopWidth) else "0";
    icmp_ln732_fu_317_p2 <= "1" when (unsigned(ap_sig_allocacmp_x_2) < unsigned(zext_ln720_cast_fu_242_p1)) else "0";
    odd_col_fu_313_p1 <= out_x_fu_307_p2(1 - 1 downto 0);
    out_x_fu_307_p2 <= std_logic_vector(unsigned(zext_ln730_fu_303_p1) - unsigned(select_ln685_cast_fu_246_p1));

    p_0_0_0480782_i_out_o_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln724_reg_810_pp0_iter1_reg, p_0_0_0480782_i_out_i, ap_block_pp0_stage0, select_ln814_5_fu_484_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln724_reg_810_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_0_0_0480782_i_out_o <= select_ln814_5_fu_484_p3;
        else 
            p_0_0_0480782_i_out_o <= p_0_0_0480782_i_out_i;
        end if; 
    end process;


    p_0_0_0480782_i_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln724_reg_810_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln724_reg_810_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_0_0_0480782_i_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0480782_i_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_0_0785_i_out_o_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln724_reg_810_pp0_iter1_reg, p_0_0_0785_i_out_i, ap_block_pp0_stage0, select_ln814_3_fu_470_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln724_reg_810_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_0_0_0785_i_out_o <= select_ln814_3_fu_470_p3;
        else 
            p_0_0_0785_i_out_o <= p_0_0_0785_i_out_i;
        end if; 
    end process;


    p_0_0_0785_i_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln724_reg_810_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln724_reg_810_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_0_0_0785_i_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0785_i_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_0_0_0_0536737_i_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln724_reg_810, icmp_ln732_reg_820, p_0_0_0_0_0536737_i_out_i, ap_block_pp0_stage0, trunc_ln734_fu_342_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln732_reg_820 = ap_const_lv1_1) and (icmp_ln724_reg_810 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_0_0_0_0536737_i_out_o <= trunc_ln734_fu_342_p1;
        else 
            p_0_0_0_0_0536737_i_out_o <= p_0_0_0_0_0536737_i_out_i;
        end if; 
    end process;


    p_0_0_0_0_0536737_i_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln724_reg_810, icmp_ln732_reg_820, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln732_reg_820 = ap_const_lv1_1) and (icmp_ln724_reg_810 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_0_0_0_0536737_i_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_0_0_0_0536737_i_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_1_0_0_0739_i_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, stream_csc_dout, icmp_ln724_reg_810, icmp_ln732_reg_820, p_0_1_0_0_0739_i_out_i, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln732_reg_820 = ap_const_lv1_1) and (icmp_ln724_reg_810 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_1_0_0_0739_i_out_o <= stream_csc_dout(15 downto 8);
        else 
            p_0_1_0_0_0739_i_out_o <= p_0_1_0_0_0739_i_out_i;
        end if; 
    end process;


    p_0_1_0_0_0739_i_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln724_reg_810, icmp_ln732_reg_820, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln732_reg_820 = ap_const_lv1_1) and (icmp_ln724_reg_810 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_1_0_0_0739_i_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_1_0_0_0739_i_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_1_0_0_0744792_i_out_o_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln724_reg_810_pp0_iter1_reg, p_0_1_0_0_0744792_i_out_i, p_0_1_0_0_0747_i_out_i, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln724_reg_810_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_0_1_0_0_0744792_i_out_o <= p_0_1_0_0_0747_i_out_i;
        else 
            p_0_1_0_0_0744792_i_out_o <= p_0_1_0_0_0744792_i_out_i;
        end if; 
    end process;


    p_0_1_0_0_0744792_i_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln724_reg_810_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln724_reg_810_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_0_1_0_0_0744792_i_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_1_0_0_0744792_i_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_1_0_0_0747_i_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, stream_csc_dout, icmp_ln724_reg_810, icmp_ln732_reg_820, p_0_1_0_0_0747_i_out_i, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln732_reg_820 = ap_const_lv1_1) and (icmp_ln724_reg_810 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_1_0_0_0747_i_out_o <= stream_csc_dout(15 downto 8);
        else 
            p_0_1_0_0_0747_i_out_o <= p_0_1_0_0_0747_i_out_i;
        end if; 
    end process;


    p_0_1_0_0_0747_i_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln724_reg_810, icmp_ln732_reg_820, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln732_reg_820 = ap_const_lv1_1) and (icmp_ln724_reg_810 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_1_0_0_0747_i_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_1_0_0_0747_i_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_1_0_0_0748795_i_out_o_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln724_reg_810_pp0_iter1_reg, p_0_1_0_0_0748795_i_out_i, p_0_1_0_0_0751_i_out_i, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln724_reg_810_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_0_1_0_0_0748795_i_out_o <= p_0_1_0_0_0751_i_out_i;
        else 
            p_0_1_0_0_0748795_i_out_o <= p_0_1_0_0_0748795_i_out_i;
        end if; 
    end process;


    p_0_1_0_0_0748795_i_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln724_reg_810_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln724_reg_810_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_0_1_0_0_0748795_i_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_1_0_0_0748795_i_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_1_0_0_0751_i_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, stream_csc_dout, icmp_ln724_reg_810, icmp_ln732_reg_820, p_0_1_0_0_0751_i_out_i, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln732_reg_820 = ap_const_lv1_1) and (icmp_ln724_reg_810 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_1_0_0_0751_i_out_o <= stream_csc_dout(23 downto 16);
        else 
            p_0_1_0_0_0751_i_out_o <= p_0_1_0_0_0751_i_out_i;
        end if; 
    end process;


    p_0_1_0_0_0751_i_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln724_reg_810, icmp_ln732_reg_820, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln732_reg_820 = ap_const_lv1_1) and (icmp_ln724_reg_810 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_1_0_0_0751_i_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_1_0_0_0751_i_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_0_2_0_0_0741_i_out_o_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, stream_csc_dout, icmp_ln724_reg_810, icmp_ln732_reg_820, p_0_2_0_0_0741_i_out_i, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln732_reg_820 = ap_const_lv1_1) and (icmp_ln724_reg_810 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_2_0_0_0741_i_out_o <= stream_csc_dout(23 downto 16);
        else 
            p_0_2_0_0_0741_i_out_o <= p_0_2_0_0_0741_i_out_i;
        end if; 
    end process;


    p_0_2_0_0_0741_i_out_o_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln724_reg_810, icmp_ln732_reg_820, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln732_reg_820 = ap_const_lv1_1) and (icmp_ln724_reg_810 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            p_0_2_0_0_0741_i_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_0_2_0_0_0741_i_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    p_0_fu_629_p4 <= ((p_0_2_0_0_0741_i_out_i & p_0_1_0_0_0739_i_out_i) & p_0_0_0_0_0536737_i_out_i);
    p_cast17_i_cast_fu_250_p3 <= 
        ap_const_lv2_3 when (p_cast17_i(0) = '1') else 
        ap_const_lv2_0;

    p_out1_o_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln724_reg_810_pp0_iter1_reg, p_out1_i, ap_block_pp0_stage0, select_ln814_1_fu_456_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln724_reg_810_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_out1_o <= select_ln814_1_fu_456_p3;
        else 
            p_out1_o <= p_out1_i;
        end if; 
    end process;


    p_out1_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln724_reg_810_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln724_reg_810_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_out1_o_ap_vld <= ap_const_logic_1;
        else 
            p_out1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    p_out_o_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln724_reg_810_pp0_iter1_reg, p_out_i, ap_block_pp0_stage0, select_ln814_fu_449_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln724_reg_810_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_out_o <= select_ln814_fu_449_p3;
        else 
            p_out_o <= p_out_i;
        end if; 
    end process;


    p_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln724_reg_810_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln724_reg_810_pp0_iter1_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            p_out_o_ap_vld <= ap_const_logic_1;
        else 
            p_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pixbuf_y_20_out <= pixbuf_y_1_fu_142;

    pixbuf_y_20_out_ap_vld_assign_proc : process(icmp_ln724_reg_810_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln724_reg_810_pp0_iter1_reg = ap_const_lv1_1))) then 
            pixbuf_y_20_out_ap_vld <= ap_const_logic_1;
        else 
            pixbuf_y_20_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    pixbuf_y_21_out_o_assign_proc : process(ap_enable_reg_pp0_iter3, pixbuf_y_21_out_i, ap_block_pp0_stage0, pixbuf_y_6_reg_838)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            pixbuf_y_21_out_o <= pixbuf_y_6_reg_838;
        else 
            pixbuf_y_21_out_o <= pixbuf_y_21_out_i;
        end if; 
    end process;


    pixbuf_y_21_out_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            pixbuf_y_21_out_o_ap_vld <= ap_const_logic_1;
        else 
            pixbuf_y_21_out_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pixbuf_y_22_out <= pixbuf_y_3_fu_150;

    pixbuf_y_22_out_ap_vld_assign_proc : process(icmp_ln724_reg_810_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln724_reg_810_pp0_iter1_reg = ap_const_lv1_1))) then 
            pixbuf_y_22_out_ap_vld <= ap_const_logic_1;
        else 
            pixbuf_y_22_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pixbuf_y_23_out <= pixbuf_y_4_fu_154;

    pixbuf_y_23_out_ap_vld_assign_proc : process(icmp_ln724_reg_810_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln724_reg_810_pp0_iter1_reg = ap_const_lv1_1))) then 
            pixbuf_y_23_out_ap_vld <= ap_const_logic_1;
        else 
            pixbuf_y_23_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    pixbuf_y_24_out <= pixbuf_y_5_fu_158;

    pixbuf_y_24_out_ap_vld_assign_proc : process(icmp_ln724_reg_810_pp0_iter1_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln724_reg_810_pp0_iter1_reg = ap_const_lv1_1))) then 
            pixbuf_y_24_out_ap_vld <= ap_const_logic_1;
        else 
            pixbuf_y_24_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    select_ln685_cast_fu_246_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln685),14));
    select_ln814_1_fu_456_p3 <= 
        p_0_1_0_0_0747_i_out_i when (cmp148_i_reg_824_pp0_iter1_reg(0) = '1') else 
        p_0_1_0_0_0744792_i_out_i;
    select_ln814_2_fu_463_p3 <= 
        p_0_1_0_0_0751_i_out_i when (cmp148_i_reg_824_pp0_iter1_reg(0) = '1') else 
        p_0_0_0785_i_out_i;
    select_ln814_3_fu_470_p3 <= 
        p_0_1_0_0_0751_i_out_i when (cmp148_i_reg_824_pp0_iter1_reg(0) = '1') else 
        p_out_i;
    select_ln814_4_fu_477_p3 <= 
        p_0_1_0_0_0747_i_out_i when (cmp148_i_reg_824_pp0_iter1_reg(0) = '1') else 
        p_0_0_0480782_i_out_i;
    select_ln814_5_fu_484_p3 <= 
        p_0_1_0_0_0747_i_out_i when (cmp148_i_reg_824_pp0_iter1_reg(0) = '1') else 
        p_out1_i;
    select_ln814_fu_449_p3 <= 
        p_0_1_0_0_0751_i_out_i when (cmp148_i_reg_824_pp0_iter1_reg(0) = '1') else 
        p_0_1_0_0_0748795_i_out_i;
    select_ln851_fu_610_p3 <= 
        trunc_ln724_fu_606_p1 when (odd_col_reg_814_pp0_iter1_reg(0) = '1') else 
        trunc_ln3_fu_533_p4;
    shl_ln1_fu_543_p3 <= (select_ln814_3_fu_470_p3 & ap_const_lv1_0);
    shl_ln_fu_491_p3 <= (select_ln814_5_fu_484_p3 & ap_const_lv1_0);

    stream_csc_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, stream_csc_empty_n, ap_predicate_op52_read_state2, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op52_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_csc_blk_n <= stream_csc_empty_n;
        else 
            stream_csc_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    stream_csc_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_predicate_op52_read_state2, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op52_read_state2 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            stream_csc_read <= ap_const_logic_1;
        else 
            stream_csc_read <= ap_const_logic_0;
        end if; 
    end process;


    stream_out_hresampled_blk_n_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, stream_out_hresampled_full_n, ap_predicate_op109_write_state3, ap_predicate_op127_write_state4, ap_block_pp0_stage0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op127_write_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_predicate_op109_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            stream_out_hresampled_blk_n <= stream_out_hresampled_full_n;
        else 
            stream_out_hresampled_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    stream_out_hresampled_din_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_predicate_op109_write_state3, ap_predicate_op127_write_state4, p_0_fu_629_p4, ap_block_pp0_stage0_01001, zext_ln882_fu_726_p1)
    begin
        if ((ap_const_boolean_0 = ap_block_pp0_stage0_01001)) then
            if (((ap_predicate_op127_write_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
                stream_out_hresampled_din <= zext_ln882_fu_726_p1;
            elsif (((ap_predicate_op109_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                stream_out_hresampled_din <= p_0_fu_629_p4;
            else 
                stream_out_hresampled_din <= "XXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            stream_out_hresampled_din <= "XXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    stream_out_hresampled_write_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_predicate_op109_write_state3, ap_predicate_op127_write_state4, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op127_write_state4 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_predicate_op109_write_state3 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then 
            stream_out_hresampled_write <= ap_const_logic_1;
        else 
            stream_out_hresampled_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_4_i_fu_719_p3 <= (select_ln851_reg_854 & tmp_i_fu_709_p6);
    trunc_ln3_fu_533_p4 <= add_ln846_1_fu_527_p2(9 downto 2);
    trunc_ln724_fu_606_p1 <= filt_res1_1_out_i(8 - 1 downto 0);
    trunc_ln734_fu_342_p1 <= stream_csc_dout(8 - 1 downto 0);
    zext_ln720_cast_fu_242_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(zext_ln720),13));
    zext_ln730_fu_303_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_x_2),14));
    zext_ln845_1_fu_503_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_491_p3),10));
    zext_ln845_fu_499_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln814_4_fu_477_p3),10));
    zext_ln846_1_fu_517_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln846_fu_511_p2),10));
    zext_ln846_fu_507_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln814_1_fu_456_p3),9));
    zext_ln847_fu_595_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(filt_res1_3_fu_585_p4),64));
    zext_ln848_1_fu_555_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1_fu_543_p3),10));
    zext_ln848_fu_551_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln814_2_fu_463_p3),10));
    zext_ln849_1_fu_569_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln849_fu_563_p2),10));
    zext_ln849_fu_559_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln814_fu_449_p3),9));
    zext_ln882_fu_726_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_i_fu_719_p3),24));
end behav;
