// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module bd_85a6_csc_0_v_hcresampler_core_Pipeline_VITIS_LOOP_724_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        stream_csc_dout,
        stream_csc_num_data_valid,
        stream_csc_fifo_cap,
        stream_csc_empty_n,
        stream_csc_read,
        stream_out_hresampled_din,
        stream_out_hresampled_num_data_valid,
        stream_out_hresampled_fifo_cap,
        stream_out_hresampled_full_n,
        stream_out_hresampled_write,
        pixbuf_y_19,
        pixbuf_y_18,
        pixbuf_y_17,
        pixbuf_y,
        p_0_0_0_0_0536742_lcssa768_i,
        loopWidth,
        p_cast17_i,
        select_ln685,
        zext_ln720,
        p_read,
        pixbuf_y_24_out,
        pixbuf_y_24_out_ap_vld,
        pixbuf_y_23_out,
        pixbuf_y_23_out_ap_vld,
        pixbuf_y_22_out,
        pixbuf_y_22_out_ap_vld,
        pixbuf_y_21_out_i,
        pixbuf_y_21_out_o,
        pixbuf_y_21_out_o_ap_vld,
        pixbuf_y_20_out,
        pixbuf_y_20_out_ap_vld,
        p_0_1_0_0_0748795_i_out_i,
        p_0_1_0_0_0748795_i_out_o,
        p_0_1_0_0_0748795_i_out_o_ap_vld,
        p_0_1_0_0_0744792_i_out_i,
        p_0_1_0_0_0744792_i_out_o,
        p_0_1_0_0_0744792_i_out_o_ap_vld,
        p_out_i,
        p_out_o,
        p_out_o_ap_vld,
        p_out1_i,
        p_out1_o,
        p_out1_o_ap_vld,
        p_0_0_0785_i_out_i,
        p_0_0_0785_i_out_o,
        p_0_0_0785_i_out_o_ap_vld,
        p_0_0_0480782_i_out_i,
        p_0_0_0480782_i_out_o,
        p_0_0_0480782_i_out_o_ap_vld,
        p_0_1_0_0_0751_i_out_i,
        p_0_1_0_0_0751_i_out_o,
        p_0_1_0_0_0751_i_out_o_ap_vld,
        p_0_1_0_0_0747_i_out_i,
        p_0_1_0_0_0747_i_out_o,
        p_0_1_0_0_0747_i_out_o_ap_vld,
        p_0_2_0_0_0741_i_out_i,
        p_0_2_0_0_0741_i_out_o,
        p_0_2_0_0_0741_i_out_o_ap_vld,
        p_0_1_0_0_0739_i_out_i,
        p_0_1_0_0_0739_i_out_o,
        p_0_1_0_0_0739_i_out_o_ap_vld,
        p_0_0_0_0_0536737_i_out_i,
        p_0_0_0_0_0536737_i_out_o,
        p_0_0_0_0_0536737_i_out_o_ap_vld,
        filt_res1_1_out_i,
        filt_res1_1_out_o,
        filt_res1_1_out_o_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [23:0] stream_csc_dout;
input  [4:0] stream_csc_num_data_valid;
input  [4:0] stream_csc_fifo_cap;
input   stream_csc_empty_n;
output   stream_csc_read;
output  [23:0] stream_out_hresampled_din;
input  [4:0] stream_out_hresampled_num_data_valid;
input  [4:0] stream_out_hresampled_fifo_cap;
input   stream_out_hresampled_full_n;
output   stream_out_hresampled_write;
input  [7:0] pixbuf_y_19;
input  [7:0] pixbuf_y_18;
input  [7:0] pixbuf_y_17;
input  [7:0] pixbuf_y;
input  [7:0] p_0_0_0_0_0536742_lcssa768_i;
input  [12:0] loopWidth;
input  [0:0] p_cast17_i;
input  [1:0] select_ln685;
input  [11:0] zext_ln720;
input  [0:0] p_read;
output  [7:0] pixbuf_y_24_out;
output   pixbuf_y_24_out_ap_vld;
output  [7:0] pixbuf_y_23_out;
output   pixbuf_y_23_out_ap_vld;
output  [7:0] pixbuf_y_22_out;
output   pixbuf_y_22_out_ap_vld;
input  [7:0] pixbuf_y_21_out_i;
output  [7:0] pixbuf_y_21_out_o;
output   pixbuf_y_21_out_o_ap_vld;
output  [7:0] pixbuf_y_20_out;
output   pixbuf_y_20_out_ap_vld;
input  [7:0] p_0_1_0_0_0748795_i_out_i;
output  [7:0] p_0_1_0_0_0748795_i_out_o;
output   p_0_1_0_0_0748795_i_out_o_ap_vld;
input  [7:0] p_0_1_0_0_0744792_i_out_i;
output  [7:0] p_0_1_0_0_0744792_i_out_o;
output   p_0_1_0_0_0744792_i_out_o_ap_vld;
input  [7:0] p_out_i;
output  [7:0] p_out_o;
output   p_out_o_ap_vld;
input  [7:0] p_out1_i;
output  [7:0] p_out1_o;
output   p_out1_o_ap_vld;
input  [7:0] p_0_0_0785_i_out_i;
output  [7:0] p_0_0_0785_i_out_o;
output   p_0_0_0785_i_out_o_ap_vld;
input  [7:0] p_0_0_0480782_i_out_i;
output  [7:0] p_0_0_0480782_i_out_o;
output   p_0_0_0480782_i_out_o_ap_vld;
input  [7:0] p_0_1_0_0_0751_i_out_i;
output  [7:0] p_0_1_0_0_0751_i_out_o;
output   p_0_1_0_0_0751_i_out_o_ap_vld;
input  [7:0] p_0_1_0_0_0747_i_out_i;
output  [7:0] p_0_1_0_0_0747_i_out_o;
output   p_0_1_0_0_0747_i_out_o_ap_vld;
input  [7:0] p_0_2_0_0_0741_i_out_i;
output  [7:0] p_0_2_0_0_0741_i_out_o;
output   p_0_2_0_0_0741_i_out_o_ap_vld;
input  [7:0] p_0_1_0_0_0739_i_out_i;
output  [7:0] p_0_1_0_0_0739_i_out_o;
output   p_0_1_0_0_0739_i_out_o_ap_vld;
input  [7:0] p_0_0_0_0_0536737_i_out_i;
output  [7:0] p_0_0_0_0_0536737_i_out_o;
output   p_0_0_0_0_0536737_i_out_o_ap_vld;
input  [63:0] filt_res1_1_out_i;
output  [63:0] filt_res1_1_out_o;
output   filt_res1_1_out_o_ap_vld;

reg ap_idle;
reg stream_csc_read;
reg[23:0] stream_out_hresampled_din;
reg stream_out_hresampled_write;
reg pixbuf_y_24_out_ap_vld;
reg pixbuf_y_23_out_ap_vld;
reg pixbuf_y_22_out_ap_vld;
reg[7:0] pixbuf_y_21_out_o;
reg pixbuf_y_21_out_o_ap_vld;
reg pixbuf_y_20_out_ap_vld;
reg[7:0] p_0_1_0_0_0748795_i_out_o;
reg p_0_1_0_0_0748795_i_out_o_ap_vld;
reg[7:0] p_0_1_0_0_0744792_i_out_o;
reg p_0_1_0_0_0744792_i_out_o_ap_vld;
reg[7:0] p_out_o;
reg p_out_o_ap_vld;
reg[7:0] p_out1_o;
reg p_out1_o_ap_vld;
reg[7:0] p_0_0_0785_i_out_o;
reg p_0_0_0785_i_out_o_ap_vld;
reg[7:0] p_0_0_0480782_i_out_o;
reg p_0_0_0480782_i_out_o_ap_vld;
reg[7:0] p_0_1_0_0_0751_i_out_o;
reg p_0_1_0_0_0751_i_out_o_ap_vld;
reg[7:0] p_0_1_0_0_0747_i_out_o;
reg p_0_1_0_0_0747_i_out_o_ap_vld;
reg[7:0] p_0_2_0_0_0741_i_out_o;
reg p_0_2_0_0_0741_i_out_o_ap_vld;
reg[7:0] p_0_1_0_0_0739_i_out_o;
reg p_0_1_0_0_0739_i_out_o_ap_vld;
reg[7:0] p_0_0_0_0_0536737_i_out_o;
reg p_0_0_0_0_0536737_i_out_o_ap_vld;
reg[63:0] filt_res1_1_out_o;
reg filt_res1_1_out_o_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln724_reg_810;
reg   [0:0] icmp_ln732_reg_820;
reg    ap_predicate_op52_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg   [0:0] icmp_ln724_reg_810_pp0_iter1_reg;
reg   [0:0] tmp_reg_834;
reg   [0:0] tmp_reg_834_pp0_iter1_reg;
reg    ap_predicate_op109_write_state3;
reg    ap_block_state3_pp0_stage0_iter2;
reg   [0:0] tmp_reg_834_pp0_iter2_reg;
reg    ap_predicate_op127_write_state4;
reg    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln724_fu_291_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    stream_csc_blk_n;
wire    ap_block_pp0_stage0;
reg    stream_out_hresampled_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [1:0] p_cast17_i_cast_fu_250_p3;
reg   [1:0] p_cast17_i_cast_reg_805;
wire   [0:0] odd_col_fu_313_p1;
reg   [0:0] odd_col_reg_814;
reg   [0:0] odd_col_reg_814_pp0_iter1_reg;
wire   [0:0] icmp_ln732_fu_317_p2;
wire   [0:0] cmp148_i_fu_323_p2;
reg   [0:0] cmp148_i_reg_824;
reg   [0:0] cmp148_i_reg_824_pp0_iter1_reg;
reg   [7:0] pixbuf_y_6_reg_838;
reg   [7:0] pixbuf_y_7_reg_844;
reg   [7:0] pixbuf_y_8_reg_849;
wire   [7:0] select_ln851_fu_610_p3;
reg   [7:0] select_ln851_reg_854;
reg    ap_condition_exit_pp0_iter2_stage0;
wire   [7:0] select_ln814_fu_449_p3;
wire   [7:0] select_ln814_1_fu_456_p3;
wire   [7:0] select_ln814_3_fu_470_p3;
wire   [7:0] select_ln814_5_fu_484_p3;
wire   [7:0] trunc_ln734_fu_342_p1;
wire   [63:0] filt_res1_fu_599_p3;
reg   [12:0] x_fu_138;
wire   [12:0] add_ln724_fu_297_p2;
wire    ap_loop_init;
reg   [12:0] ap_sig_allocacmp_x_2;
reg   [7:0] pixbuf_y_1_fu_142;
reg   [7:0] pixbuf_y_2_fu_146;
reg   [7:0] pixbuf_y_3_fu_150;
reg   [7:0] pixbuf_y_4_fu_154;
reg   [7:0] pixbuf_y_5_fu_158;
wire   [23:0] p_0_fu_629_p4;
reg    ap_block_pp0_stage0_01001;
wire   [23:0] zext_ln882_fu_726_p1;
wire   [13:0] zext_ln730_fu_303_p1;
wire   [13:0] select_ln685_cast_fu_246_p1;
wire   [13:0] out_x_fu_307_p2;
wire   [12:0] zext_ln720_cast_fu_242_p1;
wire   [7:0] select_ln814_4_fu_477_p3;
wire   [8:0] shl_ln_fu_491_p3;
wire   [8:0] zext_ln846_fu_507_p1;
wire   [8:0] add_ln846_fu_511_p2;
wire   [9:0] zext_ln846_1_fu_517_p1;
wire   [9:0] zext_ln845_fu_499_p1;
wire   [9:0] add_ln846_2_fu_521_p2;
wire   [9:0] zext_ln845_1_fu_503_p1;
wire   [9:0] add_ln846_1_fu_527_p2;
wire   [7:0] select_ln814_2_fu_463_p3;
wire   [8:0] shl_ln1_fu_543_p3;
wire   [8:0] zext_ln849_fu_559_p1;
wire   [8:0] add_ln849_fu_563_p2;
wire   [9:0] zext_ln848_1_fu_555_p1;
wire   [9:0] zext_ln848_fu_551_p1;
wire   [9:0] add_ln849_2_fu_573_p2;
wire   [9:0] zext_ln849_1_fu_569_p1;
wire   [9:0] add_ln849_1_fu_579_p2;
wire   [7:0] filt_res1_3_fu_585_p4;
wire   [63:0] zext_ln847_fu_595_p1;
wire   [7:0] trunc_ln724_fu_606_p1;
wire   [7:0] trunc_ln3_fu_533_p4;
wire   [7:0] tmp_i_fu_709_p6;
wire   [15:0] tmp_4_i_fu_719_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_569;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_done_reg = 1'b0;
end

bd_85a6_csc_0_mux_4_2_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
mux_4_2_8_1_1_U237(
    .din0(pixbuf_y_21_out_i),
    .din1(pixbuf_y_6_reg_838),
    .din2(pixbuf_y_7_reg_844),
    .din3(pixbuf_y_8_reg_849),
    .din4(p_cast17_i_cast_reg_805),
    .dout(tmp_i_fu_709_p6)
);

bd_85a6_csc_0_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter2_stage0)) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pixbuf_y_1_fu_142 <= pixbuf_y;
        end else if (((icmp_ln724_reg_810_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            pixbuf_y_1_fu_142 <= pixbuf_y_2_fu_146;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            pixbuf_y_2_fu_146 <= p_0_0_0_0_0536742_lcssa768_i;
        end else if ((1'b1 == ap_condition_569)) begin
            pixbuf_y_2_fu_146 <= trunc_ln734_fu_342_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pixbuf_y_3_fu_150 <= pixbuf_y_17;
        end else if (((icmp_ln724_reg_810_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            pixbuf_y_3_fu_150 <= pixbuf_y_4_fu_154;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pixbuf_y_4_fu_154 <= pixbuf_y_18;
        end else if (((icmp_ln724_reg_810_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            pixbuf_y_4_fu_154 <= pixbuf_y_5_fu_158;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            pixbuf_y_5_fu_158 <= pixbuf_y_19;
        end else if (((icmp_ln724_reg_810_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            pixbuf_y_5_fu_158 <= pixbuf_y_1_fu_142;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln724_fu_291_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            x_fu_138 <= add_ln724_fu_297_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            x_fu_138 <= 13'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        cmp148_i_reg_824_pp0_iter1_reg <= cmp148_i_reg_824;
        icmp_ln724_reg_810 <= icmp_ln724_fu_291_p2;
        icmp_ln724_reg_810_pp0_iter1_reg <= icmp_ln724_reg_810;
        odd_col_reg_814_pp0_iter1_reg <= odd_col_reg_814;
        p_cast17_i_cast_reg_805 <= p_cast17_i_cast_fu_250_p3;
        tmp_reg_834_pp0_iter1_reg <= tmp_reg_834;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln724_fu_291_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        cmp148_i_reg_824 <= cmp148_i_fu_323_p2;
        icmp_ln732_reg_820 <= icmp_ln732_fu_317_p2;
        odd_col_reg_814 <= odd_col_fu_313_p1;
        tmp_reg_834 <= out_x_fu_307_p2[32'd13];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        pixbuf_y_6_reg_838 <= pixbuf_y_3_fu_150;
        pixbuf_y_7_reg_844 <= pixbuf_y_4_fu_154;
        pixbuf_y_8_reg_849 <= pixbuf_y_5_fu_158;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln724_reg_810_pp0_iter1_reg == 1'd0))) begin
        select_ln851_reg_854 <= select_ln851_fu_610_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        tmp_reg_834_pp0_iter2_reg <= tmp_reg_834_pp0_iter1_reg;
    end
end

always @ (*) begin
    if (((icmp_ln724_fu_291_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln724_reg_810_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter2_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_x_2 = 13'd0;
    end else begin
        ap_sig_allocacmp_x_2 = x_fu_138;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln724_reg_810_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        filt_res1_1_out_o = filt_res1_fu_599_p3;
    end else begin
        filt_res1_1_out_o = filt_res1_1_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln724_reg_810_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        filt_res1_1_out_o_ap_vld = 1'b1;
    end else begin
        filt_res1_1_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln724_reg_810_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_0_0_0480782_i_out_o = select_ln814_5_fu_484_p3;
    end else begin
        p_0_0_0480782_i_out_o = p_0_0_0480782_i_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln724_reg_810_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_0_0_0480782_i_out_o_ap_vld = 1'b1;
    end else begin
        p_0_0_0480782_i_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln724_reg_810_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_0_0_0785_i_out_o = select_ln814_3_fu_470_p3;
    end else begin
        p_0_0_0785_i_out_o = p_0_0_0785_i_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln724_reg_810_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_0_0_0785_i_out_o_ap_vld = 1'b1;
    end else begin
        p_0_0_0785_i_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln732_reg_820 == 1'd1) & (icmp_ln724_reg_810 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_0_0_0_0536737_i_out_o = trunc_ln734_fu_342_p1;
    end else begin
        p_0_0_0_0_0536737_i_out_o = p_0_0_0_0_0536737_i_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln732_reg_820 == 1'd1) & (icmp_ln724_reg_810 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_0_0_0_0536737_i_out_o_ap_vld = 1'b1;
    end else begin
        p_0_0_0_0_0536737_i_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln732_reg_820 == 1'd1) & (icmp_ln724_reg_810 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_1_0_0_0739_i_out_o = {{stream_csc_dout[15:8]}};
    end else begin
        p_0_1_0_0_0739_i_out_o = p_0_1_0_0_0739_i_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln732_reg_820 == 1'd1) & (icmp_ln724_reg_810 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_1_0_0_0739_i_out_o_ap_vld = 1'b1;
    end else begin
        p_0_1_0_0_0739_i_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln724_reg_810_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_0_1_0_0_0744792_i_out_o = p_0_1_0_0_0747_i_out_i;
    end else begin
        p_0_1_0_0_0744792_i_out_o = p_0_1_0_0_0744792_i_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln724_reg_810_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_0_1_0_0_0744792_i_out_o_ap_vld = 1'b1;
    end else begin
        p_0_1_0_0_0744792_i_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln732_reg_820 == 1'd1) & (icmp_ln724_reg_810 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_1_0_0_0747_i_out_o = {{stream_csc_dout[15:8]}};
    end else begin
        p_0_1_0_0_0747_i_out_o = p_0_1_0_0_0747_i_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln732_reg_820 == 1'd1) & (icmp_ln724_reg_810 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_1_0_0_0747_i_out_o_ap_vld = 1'b1;
    end else begin
        p_0_1_0_0_0747_i_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln724_reg_810_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_0_1_0_0_0748795_i_out_o = p_0_1_0_0_0751_i_out_i;
    end else begin
        p_0_1_0_0_0748795_i_out_o = p_0_1_0_0_0748795_i_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln724_reg_810_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_0_1_0_0_0748795_i_out_o_ap_vld = 1'b1;
    end else begin
        p_0_1_0_0_0748795_i_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln732_reg_820 == 1'd1) & (icmp_ln724_reg_810 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_1_0_0_0751_i_out_o = {{stream_csc_dout[23:16]}};
    end else begin
        p_0_1_0_0_0751_i_out_o = p_0_1_0_0_0751_i_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln732_reg_820 == 1'd1) & (icmp_ln724_reg_810 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_1_0_0_0751_i_out_o_ap_vld = 1'b1;
    end else begin
        p_0_1_0_0_0751_i_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln732_reg_820 == 1'd1) & (icmp_ln724_reg_810 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_2_0_0_0741_i_out_o = {{stream_csc_dout[23:16]}};
    end else begin
        p_0_2_0_0_0741_i_out_o = p_0_2_0_0_0741_i_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln732_reg_820 == 1'd1) & (icmp_ln724_reg_810 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_2_0_0_0741_i_out_o_ap_vld = 1'b1;
    end else begin
        p_0_2_0_0_0741_i_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln724_reg_810_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_out1_o = select_ln814_1_fu_456_p3;
    end else begin
        p_out1_o = p_out1_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln724_reg_810_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_out1_o_ap_vld = 1'b1;
    end else begin
        p_out1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln724_reg_810_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_out_o = select_ln814_fu_449_p3;
    end else begin
        p_out_o = p_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln724_reg_810_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        p_out_o_ap_vld = 1'b1;
    end else begin
        p_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln724_reg_810_pp0_iter1_reg == 1'd1))) begin
        pixbuf_y_20_out_ap_vld = 1'b1;
    end else begin
        pixbuf_y_20_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        pixbuf_y_21_out_o = pixbuf_y_6_reg_838;
    end else begin
        pixbuf_y_21_out_o = pixbuf_y_21_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        pixbuf_y_21_out_o_ap_vld = 1'b1;
    end else begin
        pixbuf_y_21_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln724_reg_810_pp0_iter1_reg == 1'd1))) begin
        pixbuf_y_22_out_ap_vld = 1'b1;
    end else begin
        pixbuf_y_22_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln724_reg_810_pp0_iter1_reg == 1'd1))) begin
        pixbuf_y_23_out_ap_vld = 1'b1;
    end else begin
        pixbuf_y_23_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln724_reg_810_pp0_iter1_reg == 1'd1))) begin
        pixbuf_y_24_out_ap_vld = 1'b1;
    end else begin
        pixbuf_y_24_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op52_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_csc_blk_n = stream_csc_empty_n;
    end else begin
        stream_csc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op52_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_csc_read = 1'b1;
    end else begin
        stream_csc_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op127_write_state4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op109_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        stream_out_hresampled_blk_n = stream_out_hresampled_full_n;
    end else begin
        stream_out_hresampled_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_01001)) begin
        if (((ap_predicate_op127_write_state4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
            stream_out_hresampled_din = zext_ln882_fu_726_p1;
        end else if (((ap_predicate_op109_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            stream_out_hresampled_din = p_0_fu_629_p4;
        end else begin
            stream_out_hresampled_din = 'bx;
        end
    end else begin
        stream_out_hresampled_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op127_write_state4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op109_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        stream_out_hresampled_write = 1'b1;
    end else begin
        stream_out_hresampled_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln724_fu_297_p2 = (ap_sig_allocacmp_x_2 + 13'd1);

assign add_ln846_1_fu_527_p2 = (add_ln846_2_fu_521_p2 + zext_ln845_1_fu_503_p1);

assign add_ln846_2_fu_521_p2 = (zext_ln846_1_fu_517_p1 + zext_ln845_fu_499_p1);

assign add_ln846_fu_511_p2 = (zext_ln846_fu_507_p1 + 9'd2);

assign add_ln849_1_fu_579_p2 = (add_ln849_2_fu_573_p2 + zext_ln849_1_fu_569_p1);

assign add_ln849_2_fu_573_p2 = (zext_ln848_1_fu_555_p1 + zext_ln848_fu_551_p1);

assign add_ln849_fu_563_p2 = (zext_ln849_fu_559_p1 + 9'd2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_predicate_op127_write_state4 == 1'b1) & (stream_out_hresampled_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_predicate_op109_write_state3 == 1'b1) & (stream_out_hresampled_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_predicate_op52_read_state2 == 1'b1) & (stream_csc_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_predicate_op127_write_state4 == 1'b1) & (stream_out_hresampled_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_predicate_op109_write_state3 == 1'b1) & (stream_out_hresampled_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_predicate_op52_read_state2 == 1'b1) & (stream_csc_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_predicate_op127_write_state4 == 1'b1) & (stream_out_hresampled_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_predicate_op109_write_state3 == 1'b1) & (stream_out_hresampled_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_predicate_op52_read_state2 == 1'b1) & (stream_csc_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((ap_predicate_op52_read_state2 == 1'b1) & (stream_csc_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((ap_predicate_op109_write_state3 == 1'b1) & (stream_out_hresampled_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = ((ap_predicate_op127_write_state4 == 1'b1) & (stream_out_hresampled_full_n == 1'b0));
end

always @ (*) begin
    ap_condition_569 = ((icmp_ln732_reg_820 == 1'd1) & (icmp_ln724_reg_810 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

always @ (*) begin
    ap_predicate_op109_write_state3 = ((p_read == 1'd1) & (tmp_reg_834_pp0_iter1_reg == 1'd0) & (icmp_ln724_reg_810_pp0_iter1_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op127_write_state4 = ((tmp_reg_834_pp0_iter2_reg == 1'd0) & (p_read == 1'd0));
end

always @ (*) begin
    ap_predicate_op52_read_state2 = ((icmp_ln732_reg_820 == 1'd1) & (icmp_ln724_reg_810 == 1'd0));
end

assign cmp148_i_fu_323_p2 = ((ap_sig_allocacmp_x_2 == 13'd0) ? 1'b1 : 1'b0);

assign filt_res1_3_fu_585_p4 = {{add_ln849_1_fu_579_p2[9:2]}};

assign filt_res1_fu_599_p3 = ((odd_col_reg_814_pp0_iter1_reg[0:0] == 1'b1) ? filt_res1_1_out_i : zext_ln847_fu_595_p1);

assign icmp_ln724_fu_291_p2 = ((ap_sig_allocacmp_x_2 == loopWidth) ? 1'b1 : 1'b0);

assign icmp_ln732_fu_317_p2 = ((ap_sig_allocacmp_x_2 < zext_ln720_cast_fu_242_p1) ? 1'b1 : 1'b0);

assign odd_col_fu_313_p1 = out_x_fu_307_p2[0:0];

assign out_x_fu_307_p2 = (zext_ln730_fu_303_p1 - select_ln685_cast_fu_246_p1);

assign p_0_fu_629_p4 = {{{p_0_2_0_0_0741_i_out_i}, {p_0_1_0_0_0739_i_out_i}}, {p_0_0_0_0_0536737_i_out_i}};

assign p_cast17_i_cast_fu_250_p3 = ((p_cast17_i[0:0] == 1'b1) ? 2'd3 : 2'd0);

assign pixbuf_y_20_out = pixbuf_y_1_fu_142;

assign pixbuf_y_22_out = pixbuf_y_3_fu_150;

assign pixbuf_y_23_out = pixbuf_y_4_fu_154;

assign pixbuf_y_24_out = pixbuf_y_5_fu_158;

assign select_ln685_cast_fu_246_p1 = select_ln685;

assign select_ln814_1_fu_456_p3 = ((cmp148_i_reg_824_pp0_iter1_reg[0:0] == 1'b1) ? p_0_1_0_0_0747_i_out_i : p_0_1_0_0_0744792_i_out_i);

assign select_ln814_2_fu_463_p3 = ((cmp148_i_reg_824_pp0_iter1_reg[0:0] == 1'b1) ? p_0_1_0_0_0751_i_out_i : p_0_0_0785_i_out_i);

assign select_ln814_3_fu_470_p3 = ((cmp148_i_reg_824_pp0_iter1_reg[0:0] == 1'b1) ? p_0_1_0_0_0751_i_out_i : p_out_i);

assign select_ln814_4_fu_477_p3 = ((cmp148_i_reg_824_pp0_iter1_reg[0:0] == 1'b1) ? p_0_1_0_0_0747_i_out_i : p_0_0_0480782_i_out_i);

assign select_ln814_5_fu_484_p3 = ((cmp148_i_reg_824_pp0_iter1_reg[0:0] == 1'b1) ? p_0_1_0_0_0747_i_out_i : p_out1_i);

assign select_ln814_fu_449_p3 = ((cmp148_i_reg_824_pp0_iter1_reg[0:0] == 1'b1) ? p_0_1_0_0_0751_i_out_i : p_0_1_0_0_0748795_i_out_i);

assign select_ln851_fu_610_p3 = ((odd_col_reg_814_pp0_iter1_reg[0:0] == 1'b1) ? trunc_ln724_fu_606_p1 : trunc_ln3_fu_533_p4);

assign shl_ln1_fu_543_p3 = {{select_ln814_3_fu_470_p3}, {1'd0}};

assign shl_ln_fu_491_p3 = {{select_ln814_5_fu_484_p3}, {1'd0}};

assign tmp_4_i_fu_719_p3 = {{select_ln851_reg_854}, {tmp_i_fu_709_p6}};

assign trunc_ln3_fu_533_p4 = {{add_ln846_1_fu_527_p2[9:2]}};

assign trunc_ln724_fu_606_p1 = filt_res1_1_out_i[7:0];

assign trunc_ln734_fu_342_p1 = stream_csc_dout[7:0];

assign zext_ln720_cast_fu_242_p1 = zext_ln720;

assign zext_ln730_fu_303_p1 = ap_sig_allocacmp_x_2;

assign zext_ln845_1_fu_503_p1 = shl_ln_fu_491_p3;

assign zext_ln845_fu_499_p1 = select_ln814_4_fu_477_p3;

assign zext_ln846_1_fu_517_p1 = add_ln846_fu_511_p2;

assign zext_ln846_fu_507_p1 = select_ln814_1_fu_456_p3;

assign zext_ln847_fu_595_p1 = filt_res1_3_fu_585_p4;

assign zext_ln848_1_fu_555_p1 = shl_ln1_fu_543_p3;

assign zext_ln848_fu_551_p1 = select_ln814_2_fu_463_p3;

assign zext_ln849_1_fu_569_p1 = add_ln849_fu_563_p2;

assign zext_ln849_fu_559_p1 = select_ln814_fu_449_p3;

assign zext_ln882_fu_726_p1 = tmp_4_i_fu_719_p3;

endmodule //bd_85a6_csc_0_v_hcresampler_core_Pipeline_VITIS_LOOP_724_2
