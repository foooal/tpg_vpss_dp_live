// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module bd_85a6_csc_0_v_csc_core_Pipeline_VITIS_LOOP_91_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        stream_in_hresampled_dout,
        stream_in_hresampled_num_data_valid,
        stream_in_hresampled_fifo_cap,
        stream_in_hresampled_empty_n,
        stream_in_hresampled_read,
        stream_csc_din,
        stream_csc_num_data_valid,
        stream_csc_fifo_cap,
        stream_csc_full_n,
        stream_csc_write,
        add_ln89,
        ColStart_read,
        ColEnd_read,
        cmp20_not,
        cmp17_not,
        K11_read,
        K11_2_read,
        K12_read,
        K12_2_read,
        K13_read,
        K13_2_read,
        K21_read,
        K21_2_read,
        K22_read,
        K22_2_read,
        K23_read,
        K23_2_read,
        K31_read,
        K31_2_read,
        K32_read,
        K32_2_read,
        K33_read,
        K33_2_read,
        ClipMax_read,
        ClipMax_2_read,
        ClampMin_read,
        ClampMin_2_read,
        BOffset_read,
        BOffset_2_read,
        GOffset_read,
        GOffset_2_read,
        ROffset_read,
        ROffset_2_read
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [23:0] stream_in_hresampled_dout;
input  [4:0] stream_in_hresampled_num_data_valid;
input  [4:0] stream_in_hresampled_fifo_cap;
input   stream_in_hresampled_empty_n;
output   stream_in_hresampled_read;
output  [23:0] stream_csc_din;
input  [4:0] stream_csc_num_data_valid;
input  [4:0] stream_csc_fifo_cap;
input   stream_csc_full_n;
output   stream_csc_write;
input  [12:0] add_ln89;
input  [15:0] ColStart_read;
input  [15:0] ColEnd_read;
input  [0:0] cmp20_not;
input  [0:0] cmp17_not;
input  [15:0] K11_read;
input  [15:0] K11_2_read;
input  [15:0] K12_read;
input  [15:0] K12_2_read;
input  [15:0] K13_read;
input  [15:0] K13_2_read;
input  [15:0] K21_read;
input  [15:0] K21_2_read;
input  [15:0] K22_read;
input  [15:0] K22_2_read;
input  [15:0] K23_read;
input  [15:0] K23_2_read;
input  [15:0] K31_read;
input  [15:0] K31_2_read;
input  [15:0] K32_read;
input  [15:0] K32_2_read;
input  [15:0] K33_read;
input  [15:0] K33_2_read;
input  [7:0] ClipMax_read;
input  [7:0] ClipMax_2_read;
input  [7:0] ClampMin_read;
input  [7:0] ClampMin_2_read;
input  [9:0] BOffset_read;
input  [9:0] BOffset_2_read;
input  [9:0] GOffset_read;
input  [9:0] GOffset_2_read;
input  [9:0] ROffset_read;
input  [9:0] ROffset_2_read;

reg ap_idle;
reg stream_in_hresampled_read;
reg stream_csc_write;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
reg    ap_block_state6_pp0_stage0_iter5;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln91_fu_367_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    stream_in_hresampled_blk_n;
wire    ap_block_pp0_stage0;
reg    stream_csc_blk_n;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] or_ln105_2_fu_433_p2;
reg   [0:0] or_ln105_2_reg_1153;
reg   [0:0] or_ln105_2_reg_1153_pp0_iter1_reg;
reg   [0:0] or_ln105_2_reg_1153_pp0_iter2_reg;
reg   [0:0] or_ln105_2_reg_1153_pp0_iter3_reg;
wire   [7:0] Rpix_fu_450_p1;
reg   [7:0] Rpix_reg_1171;
reg   [7:0] Rpix_reg_1171_pp0_iter2_reg;
reg   [7:0] Gpix_reg_1176;
reg   [7:0] Gpix_reg_1176_pp0_iter2_reg;
wire   [23:0] zext_ln95_fu_474_p1;
wire   [24:0] add_ln147_fu_640_p2;
reg   [24:0] add_ln147_reg_1208;
wire   [19:0] trunc_ln147_fu_646_p1;
reg   [19:0] trunc_ln147_reg_1213;
wire   [24:0] add_ln149_fu_686_p2;
reg   [24:0] add_ln149_reg_1223;
wire   [19:0] trunc_ln149_fu_692_p1;
reg   [19:0] trunc_ln149_reg_1228;
wire   [24:0] add_ln151_fu_732_p2;
reg   [24:0] add_ln151_reg_1238;
wire   [19:0] trunc_ln151_fu_738_p1;
reg   [19:0] trunc_ln151_reg_1243;
wire   [7:0] select_ln153_1_fu_880_p3;
reg   [7:0] select_ln153_1_reg_1248;
wire   [7:0] select_ln155_1_fu_940_p3;
reg   [7:0] select_ln155_1_reg_1253;
wire   [7:0] select_ln154_1_fu_956_p3;
reg   [7:0] select_ln154_1_reg_1258;
reg   [12:0] x_fu_140;
wire   [12:0] x_5_fu_439_p2;
wire    ap_loop_init;
reg   [12:0] ap_sig_allocacmp_x_4;
reg    ap_block_pp0_stage0_01001;
wire   [15:0] zext_ln91_fu_363_p1;
wire   [0:0] icmp_ln103_fu_373_p2;
wire   [0:0] icmp_ln103_1_fu_379_p2;
wire   [0:0] icmp_ln104_1_fu_397_p2;
wire   [0:0] icmp_ln104_fu_391_p2;
wire   [0:0] and_ln104_fu_403_p2;
wire   [0:0] or_ln105_fu_409_p2;
wire   [0:0] or_ln103_fu_385_p2;
wire   [0:0] xor_ln105_fu_415_p2;
wire   [0:0] and_ln105_fu_421_p2;
wire   [0:0] or_ln105_1_fu_427_p2;
wire   [7:0] Bpix_fu_464_p4;
wire  signed [15:0] coef33_fu_488_p3;
wire  signed [15:0] coef23_fu_483_p3;
wire  signed [15:0] coef13_fu_478_p3;
wire   [9:0] select_ln105_11_fu_535_p3;
wire   [9:0] select_ln105_12_fu_548_p3;
wire   [9:0] select_ln105_13_fu_561_p3;
wire  signed [15:0] coef32_fu_530_p3;
wire  signed [15:0] coef31_fu_525_p3;
wire  signed [15:0] coef22_fu_520_p3;
wire  signed [15:0] coef21_fu_515_p3;
wire  signed [15:0] coef12_fu_510_p3;
wire  signed [15:0] coef11_fu_505_p3;
wire   [21:0] offsetR_fu_566_p3;
wire  signed [21:0] or_ln147_fu_604_p2;
wire   [7:0] mul_ln147_fu_614_p1;
wire   [23:0] zext_ln61_fu_598_p1;
wire  signed [23:0] mul_ln147_fu_614_p2;
wire   [7:0] mul_ln147_1_fu_624_p1;
wire   [23:0] zext_ln61_1_fu_601_p1;
wire  signed [23:0] mul_ln147_1_fu_624_p2;
wire  signed [24:0] sext_ln147_2_fu_630_p1;
wire  signed [24:0] sext_ln147_1_fu_620_p1;
wire   [23:0] add_ln147_4_fu_634_p2;
wire   [21:0] offsetG_fu_553_p3;
wire  signed [21:0] or_ln149_fu_650_p2;
wire   [7:0] mul_ln149_fu_660_p1;
wire  signed [23:0] mul_ln149_fu_660_p2;
wire   [7:0] mul_ln149_1_fu_670_p1;
wire  signed [23:0] mul_ln149_1_fu_670_p2;
wire  signed [24:0] sext_ln149_2_fu_676_p1;
wire  signed [24:0] sext_ln149_1_fu_666_p1;
wire   [23:0] add_ln149_4_fu_680_p2;
wire   [21:0] offsetB_fu_540_p3;
wire  signed [21:0] or_ln151_fu_696_p2;
wire   [7:0] mul_ln151_fu_706_p1;
wire  signed [23:0] mul_ln151_fu_706_p2;
wire   [7:0] mul_ln151_1_fu_716_p1;
wire  signed [23:0] mul_ln151_1_fu_716_p2;
wire  signed [24:0] sext_ln151_2_fu_722_p1;
wire  signed [24:0] sext_ln151_1_fu_712_p1;
wire   [23:0] add_ln151_4_fu_726_p2;
wire   [7:0] min_val_fu_747_p3;
wire   [7:0] max_val_fu_742_p3;
wire  signed [24:0] grp_fu_972_p3;
wire   [19:0] trunc_ln147_1_fu_763_p1;
wire  signed [25:0] sext_ln147_5_fu_766_p1;
wire  signed [25:0] sext_ln147_4_fu_760_p1;
wire   [25:0] add_ln147_2_fu_774_p2;
wire  signed [24:0] grp_fu_982_p3;
wire   [19:0] trunc_ln149_1_fu_793_p1;
wire  signed [25:0] sext_ln149_5_fu_796_p1;
wire  signed [25:0] sext_ln149_4_fu_790_p1;
wire   [25:0] add_ln149_2_fu_804_p2;
wire  signed [24:0] grp_fu_992_p3;
wire   [19:0] trunc_ln151_1_fu_823_p1;
wire  signed [25:0] sext_ln151_5_fu_826_p1;
wire  signed [25:0] sext_ln151_4_fu_820_p1;
wire   [25:0] add_ln151_2_fu_834_p2;
wire   [13:0] Rres_fu_780_p4;
wire   [13:0] zext_ln65_fu_752_p1;
wire   [13:0] zext_ln65_1_fu_756_p1;
wire   [19:0] add_ln147_3_fu_769_p2;
wire   [0:0] icmp_ln153_1_fu_856_p2;
wire   [7:0] trunc_ln_fu_862_p4;
wire   [0:0] icmp_ln153_fu_850_p2;
wire   [7:0] select_ln153_fu_872_p3;
wire   [13:0] Gres_fu_810_p4;
wire   [19:0] add_ln149_3_fu_799_p2;
wire   [13:0] Bres_fu_840_p4;
wire   [19:0] add_ln151_3_fu_829_p2;
wire   [0:0] icmp_ln155_1_fu_916_p2;
wire   [7:0] trunc_ln5_fu_922_p4;
wire   [0:0] icmp_ln155_fu_910_p2;
wire   [7:0] select_ln155_fu_932_p3;
wire   [0:0] icmp_ln154_1_fu_894_p2;
wire   [7:0] trunc_ln4_fu_900_p4;
wire   [0:0] icmp_ln154_fu_888_p2;
wire   [7:0] select_ln154_fu_948_p3;
wire   [7:0] grp_fu_972_p0;
wire   [7:0] grp_fu_982_p0;
wire   [7:0] grp_fu_992_p0;
reg    grp_fu_972_ce;
reg    grp_fu_982_ce;
reg    grp_fu_992_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_done_reg = 1'b0;
end

bd_85a6_csc_0_mul_16s_8ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_16s_8ns_24_1_1_U153(
    .din0(coef11_fu_505_p3),
    .din1(mul_ln147_fu_614_p1),
    .dout(mul_ln147_fu_614_p2)
);

bd_85a6_csc_0_mul_16s_8ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_16s_8ns_24_1_1_U154(
    .din0(coef12_fu_510_p3),
    .din1(mul_ln147_1_fu_624_p1),
    .dout(mul_ln147_1_fu_624_p2)
);

bd_85a6_csc_0_mul_16s_8ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_16s_8ns_24_1_1_U155(
    .din0(coef21_fu_515_p3),
    .din1(mul_ln149_fu_660_p1),
    .dout(mul_ln149_fu_660_p2)
);

bd_85a6_csc_0_mul_16s_8ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_16s_8ns_24_1_1_U156(
    .din0(coef22_fu_520_p3),
    .din1(mul_ln149_1_fu_670_p1),
    .dout(mul_ln149_1_fu_670_p2)
);

bd_85a6_csc_0_mul_16s_8ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_16s_8ns_24_1_1_U157(
    .din0(coef31_fu_525_p3),
    .din1(mul_ln151_fu_706_p1),
    .dout(mul_ln151_fu_706_p2)
);

bd_85a6_csc_0_mul_16s_8ns_24_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_16s_8ns_24_1_1_U158(
    .din0(coef32_fu_530_p3),
    .din1(mul_ln151_1_fu_716_p1),
    .dout(mul_ln151_1_fu_716_p2)
);

bd_85a6_csc_0_mac_muladd_8ns_16s_22s_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 25 ))
mac_muladd_8ns_16s_22s_25_4_1_U159(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_972_p0),
    .din1(coef13_fu_478_p3),
    .din2(or_ln147_fu_604_p2),
    .ce(grp_fu_972_ce),
    .dout(grp_fu_972_p3)
);

bd_85a6_csc_0_mac_muladd_8ns_16s_22s_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 25 ))
mac_muladd_8ns_16s_22s_25_4_1_U160(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_982_p0),
    .din1(coef23_fu_483_p3),
    .din2(or_ln149_fu_650_p2),
    .ce(grp_fu_982_ce),
    .dout(grp_fu_982_p3)
);

bd_85a6_csc_0_mac_muladd_8ns_16s_22s_25_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 22 ),
    .dout_WIDTH( 25 ))
mac_muladd_8ns_16s_22s_25_4_1_U161(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_992_p0),
    .din1(coef33_fu_488_p3),
    .din2(or_ln151_fu_696_p2),
    .ce(grp_fu_992_ce),
    .dout(grp_fu_992_p3)
);

bd_85a6_csc_0_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter4_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln91_fu_367_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            x_fu_140 <= x_5_fu_439_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            x_fu_140 <= 13'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Gpix_reg_1176 <= {{stream_in_hresampled_dout[15:8]}};
        Rpix_reg_1171 <= Rpix_fu_450_p1;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        or_ln105_2_reg_1153_pp0_iter1_reg <= or_ln105_2_reg_1153;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        Gpix_reg_1176_pp0_iter2_reg <= Gpix_reg_1176;
        Rpix_reg_1171_pp0_iter2_reg <= Rpix_reg_1171;
        add_ln147_reg_1208 <= add_ln147_fu_640_p2;
        add_ln149_reg_1223 <= add_ln149_fu_686_p2;
        add_ln151_reg_1238 <= add_ln151_fu_732_p2;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        or_ln105_2_reg_1153_pp0_iter2_reg <= or_ln105_2_reg_1153_pp0_iter1_reg;
        or_ln105_2_reg_1153_pp0_iter3_reg <= or_ln105_2_reg_1153_pp0_iter2_reg;
        select_ln153_1_reg_1248 <= select_ln153_1_fu_880_p3;
        select_ln154_1_reg_1258 <= select_ln154_1_fu_956_p3;
        select_ln155_1_reg_1253 <= select_ln155_1_fu_940_p3;
        trunc_ln147_reg_1213 <= trunc_ln147_fu_646_p1;
        trunc_ln149_reg_1228 <= trunc_ln149_fu_692_p1;
        trunc_ln151_reg_1243 <= trunc_ln151_fu_738_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln91_fu_367_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        or_ln105_2_reg_1153 <= or_ln105_2_fu_433_p2;
    end
end

always @ (*) begin
    if (((icmp_ln91_fu_367_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter4_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_x_4 = 13'd1;
    end else begin
        ap_sig_allocacmp_x_4 = x_fu_140;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_972_ce = 1'b1;
    end else begin
        grp_fu_972_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_982_ce = 1'b1;
    end else begin
        grp_fu_982_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_992_ce = 1'b1;
    end else begin
        grp_fu_992_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        stream_csc_blk_n = stream_csc_full_n;
    end else begin
        stream_csc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1))) begin
        stream_csc_write = 1'b1;
    end else begin
        stream_csc_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_in_hresampled_blk_n = stream_in_hresampled_empty_n;
    end else begin
        stream_in_hresampled_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_in_hresampled_read = 1'b1;
    end else begin
        stream_in_hresampled_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Bpix_fu_464_p4 = {{stream_in_hresampled_dout[23:16]}};

assign Bres_fu_840_p4 = {{add_ln151_2_fu_834_p2[25:12]}};

assign Gres_fu_810_p4 = {{add_ln149_2_fu_804_p2[25:12]}};

assign Rpix_fu_450_p1 = stream_in_hresampled_dout[7:0];

assign Rres_fu_780_p4 = {{add_ln147_2_fu_774_p2[25:12]}};

assign add_ln147_2_fu_774_p2 = ($signed(sext_ln147_5_fu_766_p1) + $signed(sext_ln147_4_fu_760_p1));

assign add_ln147_3_fu_769_p2 = (trunc_ln147_1_fu_763_p1 + trunc_ln147_reg_1213);

assign add_ln147_4_fu_634_p2 = ($signed(mul_ln147_1_fu_624_p2) + $signed(mul_ln147_fu_614_p2));

assign add_ln147_fu_640_p2 = ($signed(sext_ln147_2_fu_630_p1) + $signed(sext_ln147_1_fu_620_p1));

assign add_ln149_2_fu_804_p2 = ($signed(sext_ln149_5_fu_796_p1) + $signed(sext_ln149_4_fu_790_p1));

assign add_ln149_3_fu_799_p2 = (trunc_ln149_1_fu_793_p1 + trunc_ln149_reg_1228);

assign add_ln149_4_fu_680_p2 = ($signed(mul_ln149_1_fu_670_p2) + $signed(mul_ln149_fu_660_p2));

assign add_ln149_fu_686_p2 = ($signed(sext_ln149_2_fu_676_p1) + $signed(sext_ln149_1_fu_666_p1));

assign add_ln151_2_fu_834_p2 = ($signed(sext_ln151_5_fu_826_p1) + $signed(sext_ln151_4_fu_820_p1));

assign add_ln151_3_fu_829_p2 = (trunc_ln151_1_fu_823_p1 + trunc_ln151_reg_1243);

assign add_ln151_4_fu_726_p2 = ($signed(mul_ln151_1_fu_716_p2) + $signed(mul_ln151_fu_706_p2));

assign add_ln151_fu_732_p2 = ($signed(sext_ln151_2_fu_722_p1) + $signed(sext_ln151_1_fu_712_p1));

assign and_ln104_fu_403_p2 = (icmp_ln104_fu_391_p2 & icmp_ln104_1_fu_397_p2);

assign and_ln105_fu_421_p2 = (xor_ln105_fu_415_p2 & or_ln103_fu_385_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((stream_csc_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((stream_in_hresampled_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((stream_csc_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((stream_in_hresampled_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((stream_csc_full_n == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b1)) | ((stream_in_hresampled_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = (stream_in_hresampled_empty_n == 1'b0);
end

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state6_pp0_stage0_iter5 = (stream_csc_full_n == 1'b0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign coef11_fu_505_p3 = ((or_ln105_2_reg_1153_pp0_iter2_reg[0:0] == 1'b1) ? K11_read : K11_2_read);

assign coef12_fu_510_p3 = ((or_ln105_2_reg_1153_pp0_iter2_reg[0:0] == 1'b1) ? K12_read : K12_2_read);

assign coef13_fu_478_p3 = ((or_ln105_2_reg_1153[0:0] == 1'b1) ? K13_read : K13_2_read);

assign coef21_fu_515_p3 = ((or_ln105_2_reg_1153_pp0_iter2_reg[0:0] == 1'b1) ? K21_read : K21_2_read);

assign coef22_fu_520_p3 = ((or_ln105_2_reg_1153_pp0_iter2_reg[0:0] == 1'b1) ? K22_read : K22_2_read);

assign coef23_fu_483_p3 = ((or_ln105_2_reg_1153[0:0] == 1'b1) ? K23_read : K23_2_read);

assign coef31_fu_525_p3 = ((or_ln105_2_reg_1153_pp0_iter2_reg[0:0] == 1'b1) ? K31_read : K31_2_read);

assign coef32_fu_530_p3 = ((or_ln105_2_reg_1153_pp0_iter2_reg[0:0] == 1'b1) ? K32_read : K32_2_read);

assign coef33_fu_488_p3 = ((or_ln105_2_reg_1153[0:0] == 1'b1) ? K33_read : K33_2_read);

assign grp_fu_972_p0 = zext_ln95_fu_474_p1;

assign grp_fu_982_p0 = zext_ln95_fu_474_p1;

assign grp_fu_992_p0 = zext_ln95_fu_474_p1;

assign icmp_ln103_1_fu_379_p2 = ((zext_ln91_fu_363_p1 == ColEnd_read) ? 1'b1 : 1'b0);

assign icmp_ln103_fu_373_p2 = ((zext_ln91_fu_363_p1 != ColStart_read) ? 1'b1 : 1'b0);

assign icmp_ln104_1_fu_397_p2 = (($signed(zext_ln91_fu_363_p1) < $signed(ColEnd_read)) ? 1'b1 : 1'b0);

assign icmp_ln104_fu_391_p2 = (($signed(zext_ln91_fu_363_p1) > $signed(ColStart_read)) ? 1'b1 : 1'b0);

assign icmp_ln153_1_fu_856_p2 = (($signed(Rres_fu_780_p4) > $signed(zext_ln65_1_fu_756_p1)) ? 1'b1 : 1'b0);

assign icmp_ln153_fu_850_p2 = (($signed(Rres_fu_780_p4) < $signed(zext_ln65_fu_752_p1)) ? 1'b1 : 1'b0);

assign icmp_ln154_1_fu_894_p2 = (($signed(Gres_fu_810_p4) > $signed(zext_ln65_1_fu_756_p1)) ? 1'b1 : 1'b0);

assign icmp_ln154_fu_888_p2 = (($signed(Gres_fu_810_p4) < $signed(zext_ln65_fu_752_p1)) ? 1'b1 : 1'b0);

assign icmp_ln155_1_fu_916_p2 = (($signed(Bres_fu_840_p4) > $signed(zext_ln65_1_fu_756_p1)) ? 1'b1 : 1'b0);

assign icmp_ln155_fu_910_p2 = (($signed(Bres_fu_840_p4) < $signed(zext_ln65_fu_752_p1)) ? 1'b1 : 1'b0);

assign icmp_ln91_fu_367_p2 = ((ap_sig_allocacmp_x_4 == add_ln89) ? 1'b1 : 1'b0);

assign max_val_fu_742_p3 = ((or_ln105_2_reg_1153_pp0_iter3_reg[0:0] == 1'b1) ? ClipMax_read : ClipMax_2_read);

assign min_val_fu_747_p3 = ((or_ln105_2_reg_1153_pp0_iter3_reg[0:0] == 1'b1) ? ClampMin_read : ClampMin_2_read);

assign mul_ln147_1_fu_624_p1 = zext_ln61_1_fu_601_p1;

assign mul_ln147_fu_614_p1 = zext_ln61_fu_598_p1;

assign mul_ln149_1_fu_670_p1 = zext_ln61_1_fu_601_p1;

assign mul_ln149_fu_660_p1 = zext_ln61_fu_598_p1;

assign mul_ln151_1_fu_716_p1 = zext_ln61_1_fu_601_p1;

assign mul_ln151_fu_706_p1 = zext_ln61_fu_598_p1;

assign offsetB_fu_540_p3 = {{select_ln105_11_fu_535_p3}, {12'd0}};

assign offsetG_fu_553_p3 = {{select_ln105_12_fu_548_p3}, {12'd0}};

assign offsetR_fu_566_p3 = {{select_ln105_13_fu_561_p3}, {12'd0}};

assign or_ln103_fu_385_p2 = (icmp_ln103_fu_373_p2 | icmp_ln103_1_fu_379_p2);

assign or_ln105_1_fu_427_p2 = (cmp20_not | and_ln105_fu_421_p2);

assign or_ln105_2_fu_433_p2 = (or_ln105_1_fu_427_p2 | cmp17_not);

assign or_ln105_fu_409_p2 = (icmp_ln103_1_fu_379_p2 | and_ln104_fu_403_p2);

assign or_ln147_fu_604_p2 = (offsetR_fu_566_p3 | 22'd2048);

assign or_ln149_fu_650_p2 = (offsetG_fu_553_p3 | 22'd2048);

assign or_ln151_fu_696_p2 = (offsetB_fu_540_p3 | 22'd2048);

assign select_ln105_11_fu_535_p3 = ((or_ln105_2_reg_1153_pp0_iter2_reg[0:0] == 1'b1) ? BOffset_read : BOffset_2_read);

assign select_ln105_12_fu_548_p3 = ((or_ln105_2_reg_1153_pp0_iter2_reg[0:0] == 1'b1) ? GOffset_read : GOffset_2_read);

assign select_ln105_13_fu_561_p3 = ((or_ln105_2_reg_1153_pp0_iter2_reg[0:0] == 1'b1) ? ROffset_read : ROffset_2_read);

assign select_ln153_1_fu_880_p3 = ((icmp_ln153_fu_850_p2[0:0] == 1'b1) ? min_val_fu_747_p3 : select_ln153_fu_872_p3);

assign select_ln153_fu_872_p3 = ((icmp_ln153_1_fu_856_p2[0:0] == 1'b1) ? max_val_fu_742_p3 : trunc_ln_fu_862_p4);

assign select_ln154_1_fu_956_p3 = ((icmp_ln154_fu_888_p2[0:0] == 1'b1) ? min_val_fu_747_p3 : select_ln154_fu_948_p3);

assign select_ln154_fu_948_p3 = ((icmp_ln154_1_fu_894_p2[0:0] == 1'b1) ? max_val_fu_742_p3 : trunc_ln4_fu_900_p4);

assign select_ln155_1_fu_940_p3 = ((icmp_ln155_fu_910_p2[0:0] == 1'b1) ? min_val_fu_747_p3 : select_ln155_fu_932_p3);

assign select_ln155_fu_932_p3 = ((icmp_ln155_1_fu_916_p2[0:0] == 1'b1) ? max_val_fu_742_p3 : trunc_ln5_fu_922_p4);

assign sext_ln147_1_fu_620_p1 = mul_ln147_fu_614_p2;

assign sext_ln147_2_fu_630_p1 = mul_ln147_1_fu_624_p2;

assign sext_ln147_4_fu_760_p1 = $signed(add_ln147_reg_1208);

assign sext_ln147_5_fu_766_p1 = grp_fu_972_p3;

assign sext_ln149_1_fu_666_p1 = mul_ln149_fu_660_p2;

assign sext_ln149_2_fu_676_p1 = mul_ln149_1_fu_670_p2;

assign sext_ln149_4_fu_790_p1 = $signed(add_ln149_reg_1223);

assign sext_ln149_5_fu_796_p1 = grp_fu_982_p3;

assign sext_ln151_1_fu_712_p1 = mul_ln151_fu_706_p2;

assign sext_ln151_2_fu_722_p1 = mul_ln151_1_fu_716_p2;

assign sext_ln151_4_fu_820_p1 = $signed(add_ln151_reg_1238);

assign sext_ln151_5_fu_826_p1 = grp_fu_992_p3;

assign stream_csc_din = {{{select_ln155_1_reg_1253}, {select_ln154_1_reg_1258}}, {select_ln153_1_reg_1248}};

assign trunc_ln147_1_fu_763_p1 = grp_fu_972_p3[19:0];

assign trunc_ln147_fu_646_p1 = add_ln147_4_fu_634_p2[19:0];

assign trunc_ln149_1_fu_793_p1 = grp_fu_982_p3[19:0];

assign trunc_ln149_fu_692_p1 = add_ln149_4_fu_680_p2[19:0];

assign trunc_ln151_1_fu_823_p1 = grp_fu_992_p3[19:0];

assign trunc_ln151_fu_738_p1 = add_ln151_4_fu_726_p2[19:0];

assign trunc_ln4_fu_900_p4 = {{add_ln149_3_fu_799_p2[19:12]}};

assign trunc_ln5_fu_922_p4 = {{add_ln151_3_fu_829_p2[19:12]}};

assign trunc_ln_fu_862_p4 = {{add_ln147_3_fu_769_p2[19:12]}};

assign x_5_fu_439_p2 = (ap_sig_allocacmp_x_4 + 13'd1);

assign xor_ln105_fu_415_p2 = (or_ln105_fu_409_p2 ^ 1'd1);

assign zext_ln61_1_fu_601_p1 = Gpix_reg_1176_pp0_iter2_reg;

assign zext_ln61_fu_598_p1 = Rpix_reg_1171_pp0_iter2_reg;

assign zext_ln65_1_fu_756_p1 = max_val_fu_742_p3;

assign zext_ln65_fu_752_p1 = min_val_fu_747_p3;

assign zext_ln91_fu_363_p1 = ap_sig_allocacmp_x_4;

assign zext_ln95_fu_474_p1 = Bpix_fu_464_p4;

endmodule //bd_85a6_csc_0_v_csc_core_Pipeline_VITIS_LOOP_91_2
