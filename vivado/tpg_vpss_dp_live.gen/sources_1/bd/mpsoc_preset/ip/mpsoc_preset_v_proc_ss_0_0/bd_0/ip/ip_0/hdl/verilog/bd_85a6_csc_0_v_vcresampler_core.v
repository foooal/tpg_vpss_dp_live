// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module bd_85a6_csc_0_v_vcresampler_core (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        stream_out_hresampled_dout,
        stream_out_hresampled_num_data_valid,
        stream_out_hresampled_fifo_cap,
        stream_out_hresampled_empty_n,
        stream_out_hresampled_read,
        HwReg_height_dout,
        HwReg_height_num_data_valid,
        HwReg_height_fifo_cap,
        HwReg_height_empty_n,
        HwReg_height_read,
        HwReg_width_dout,
        HwReg_width_num_data_valid,
        HwReg_width_fifo_cap,
        HwReg_width_empty_n,
        HwReg_width_read,
        p_read,
        stream_out_vresampled_din,
        stream_out_vresampled_num_data_valid,
        stream_out_vresampled_fifo_cap,
        stream_out_vresampled_full_n,
        stream_out_vresampled_write,
        HwReg_width_c_din,
        HwReg_width_c_num_data_valid,
        HwReg_width_c_fifo_cap,
        HwReg_width_c_full_n,
        HwReg_width_c_write,
        HwReg_height_c_din,
        HwReg_height_c_num_data_valid,
        HwReg_height_c_fifo_cap,
        HwReg_height_c_full_n,
        HwReg_height_c_write
);

parameter    ap_ST_fsm_state1 = 3'd1;
parameter    ap_ST_fsm_state2 = 3'd2;
parameter    ap_ST_fsm_state3 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [23:0] stream_out_hresampled_dout;
input  [4:0] stream_out_hresampled_num_data_valid;
input  [4:0] stream_out_hresampled_fifo_cap;
input   stream_out_hresampled_empty_n;
output   stream_out_hresampled_read;
input  [11:0] HwReg_height_dout;
input  [1:0] HwReg_height_num_data_valid;
input  [1:0] HwReg_height_fifo_cap;
input   HwReg_height_empty_n;
output   HwReg_height_read;
input  [11:0] HwReg_width_dout;
input  [1:0] HwReg_width_num_data_valid;
input  [1:0] HwReg_width_fifo_cap;
input   HwReg_width_empty_n;
output   HwReg_width_read;
input  [0:0] p_read;
output  [23:0] stream_out_vresampled_din;
input  [4:0] stream_out_vresampled_num_data_valid;
input  [4:0] stream_out_vresampled_fifo_cap;
input   stream_out_vresampled_full_n;
output   stream_out_vresampled_write;
output  [11:0] HwReg_width_c_din;
input  [1:0] HwReg_width_c_num_data_valid;
input  [1:0] HwReg_width_c_fifo_cap;
input   HwReg_width_c_full_n;
output   HwReg_width_c_write;
output  [11:0] HwReg_height_c_din;
input  [1:0] HwReg_height_c_num_data_valid;
input  [1:0] HwReg_height_c_fifo_cap;
input   HwReg_height_c_full_n;
output   HwReg_height_c_write;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg stream_out_hresampled_read;
reg HwReg_height_read;
reg HwReg_width_read;
reg stream_out_vresampled_write;
reg HwReg_width_c_write;
reg HwReg_height_c_write;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    HwReg_height_blk_n;
reg    HwReg_width_blk_n;
reg    HwReg_width_c_blk_n;
reg    HwReg_height_c_blk_n;
reg    ap_block_state1;
reg   [11:0] loopWidth_reg_279;
wire   [12:0] zext_ln907_fu_166_p1;
reg   [12:0] zext_ln907_reg_284;
wire   [12:0] zext_ln951_fu_170_p1;
reg   [12:0] zext_ln951_reg_289;
wire   [12:0] add_ln953_fu_174_p2;
reg   [12:0] add_ln953_reg_294;
wire   [0:0] empty_fu_204_p1;
reg   [0:0] empty_reg_302;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln953_fu_188_p2;
wire   [0:0] cmp33_i_fu_209_p2;
reg   [0:0] cmp33_i_reg_307;
wire   [0:0] cmp105_i_fu_215_p2;
reg   [0:0] cmp105_i_reg_312;
wire   [0:0] rev_fu_230_p2;
reg   [0:0] rev_reg_317;
wire   [7:0] linebuf_y_q0;
wire   [7:0] linebuf_c_q1;
wire   [7:0] linebuf_c_2_q1;
wire    grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_ap_start;
wire    grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_ap_done;
wire    grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_ap_idle;
wire    grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_ap_ready;
wire    grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_stream_out_hresampled_read;
wire   [23:0] grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_stream_out_vresampled_din;
wire    grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_stream_out_vresampled_write;
wire   [11:0] grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_y_address0;
wire    grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_y_ce0;
wire    grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_y_we0;
wire   [7:0] grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_y_d0;
wire   [11:0] grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_c_address0;
wire    grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_c_ce0;
wire    grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_c_we0;
wire   [7:0] grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_c_d0;
wire   [11:0] grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_c_address1;
wire    grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_c_ce1;
wire   [11:0] grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_c_2_address0;
wire    grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_c_2_ce0;
wire    grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_c_2_we0;
wire   [7:0] grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_c_2_d0;
wire   [11:0] grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_c_2_address1;
wire    grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_c_2_ce1;
wire   [7:0] grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_p_0_1_0_0_0607_i_out_o;
wire    grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_p_0_1_0_0_0607_i_out_o_ap_vld;
wire   [7:0] grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_p_0_0_0_0_0423605_i_out_o;
wire    grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_p_0_0_0_0_0423605_i_out_o_ap_vld;
wire   [7:0] grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_p_0_2_0_0_0603_i_out_o;
wire    grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_p_0_2_0_0_0603_i_out_o_ap_vld;
wire   [7:0] grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_p_0_1_0_0_0601_i_out_o;
wire    grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_p_0_1_0_0_0601_i_out_o_ap_vld;
wire   [7:0] grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_p_0_0_0_0_0423599_i_out_o;
wire    grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_p_0_0_0_0_0423599_i_out_o_ap_vld;
reg    grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_ap_start_reg;
wire    ap_CS_fsm_state3;
reg   [7:0] p_0_1_0_0_0608_lcssa635_i_fu_84;
reg   [7:0] p_0_0_0_0_0423606_lcssa632_i_fu_80;
reg   [7:0] p_0_2_0_0_0604_lcssa629_i_fu_76;
reg   [7:0] p_0_1_0_0_0602_lcssa626_i_fu_72;
reg   [7:0] p_0_0_0_0_0423600_lcssa623_i_fu_68;
reg   [12:0] y_fu_88;
wire   [12:0] add_ln953_2_fu_193_p2;
wire   [0:0] yOffset_fu_160_p2;
wire   [12:0] out_y_fu_199_p2;
wire   [0:0] tmp_fu_222_p3;
reg   [2:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 3'd1;
#0 grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_ap_start_reg = 1'b0;
end

bd_85a6_csc_0_v_vcresampler_core_linebuf_y_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 3840 ),
    .AddressWidth( 12 ))
linebuf_y_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_y_address0),
    .ce0(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_y_ce0),
    .we0(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_y_we0),
    .d0(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_y_d0),
    .q0(linebuf_y_q0)
);

bd_85a6_csc_0_v_vcresampler_core_linebuf_c_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 3840 ),
    .AddressWidth( 12 ))
linebuf_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_c_address0),
    .ce0(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_c_ce0),
    .we0(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_c_we0),
    .d0(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_c_d0),
    .address1(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_c_address1),
    .ce1(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_c_ce1),
    .q1(linebuf_c_q1)
);

bd_85a6_csc_0_v_vcresampler_core_linebuf_c_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 3840 ),
    .AddressWidth( 12 ))
linebuf_c_2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_c_2_address0),
    .ce0(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_c_2_ce0),
    .we0(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_c_2_we0),
    .d0(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_c_2_d0),
    .address1(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_c_2_address1),
    .ce1(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_c_2_ce1),
    .q1(linebuf_c_2_q1)
);

bd_85a6_csc_0_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2 grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_ap_start),
    .ap_done(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_ap_done),
    .ap_idle(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_ap_idle),
    .ap_ready(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_ap_ready),
    .stream_out_hresampled_dout(stream_out_hresampled_dout),
    .stream_out_hresampled_num_data_valid(5'd0),
    .stream_out_hresampled_fifo_cap(5'd0),
    .stream_out_hresampled_empty_n(stream_out_hresampled_empty_n),
    .stream_out_hresampled_read(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_stream_out_hresampled_read),
    .stream_out_vresampled_din(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_stream_out_vresampled_din),
    .stream_out_vresampled_num_data_valid(5'd0),
    .stream_out_vresampled_fifo_cap(5'd0),
    .stream_out_vresampled_full_n(stream_out_vresampled_full_n),
    .stream_out_vresampled_write(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_stream_out_vresampled_write),
    .loopWidth(loopWidth_reg_279),
    .cmp105_i(cmp105_i_reg_312),
    .out_y_cast_i(empty_reg_302),
    .cmp393_i(rev_reg_317),
    .linebuf_y_address0(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_y_address0),
    .linebuf_y_ce0(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_y_ce0),
    .linebuf_y_we0(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_y_we0),
    .linebuf_y_d0(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_y_d0),
    .linebuf_y_q0(linebuf_y_q0),
    .linebuf_c_address0(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_c_address0),
    .linebuf_c_ce0(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_c_ce0),
    .linebuf_c_we0(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_c_we0),
    .linebuf_c_d0(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_c_d0),
    .linebuf_c_address1(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_c_address1),
    .linebuf_c_ce1(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_c_ce1),
    .linebuf_c_q1(linebuf_c_q1),
    .linebuf_c_2_address0(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_c_2_address0),
    .linebuf_c_2_ce0(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_c_2_ce0),
    .linebuf_c_2_we0(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_c_2_we0),
    .linebuf_c_2_d0(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_c_2_d0),
    .linebuf_c_2_address1(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_c_2_address1),
    .linebuf_c_2_ce1(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_linebuf_c_2_ce1),
    .linebuf_c_2_q1(linebuf_c_2_q1),
    .cmp33_i(cmp33_i_reg_307),
    .p_read(p_read),
    .p_0_1_0_0_0607_i_out_i(p_0_1_0_0_0608_lcssa635_i_fu_84),
    .p_0_1_0_0_0607_i_out_o(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_p_0_1_0_0_0607_i_out_o),
    .p_0_1_0_0_0607_i_out_o_ap_vld(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_p_0_1_0_0_0607_i_out_o_ap_vld),
    .p_0_0_0_0_0423605_i_out_i(p_0_0_0_0_0423606_lcssa632_i_fu_80),
    .p_0_0_0_0_0423605_i_out_o(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_p_0_0_0_0_0423605_i_out_o),
    .p_0_0_0_0_0423605_i_out_o_ap_vld(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_p_0_0_0_0_0423605_i_out_o_ap_vld),
    .p_0_2_0_0_0603_i_out_i(p_0_2_0_0_0604_lcssa629_i_fu_76),
    .p_0_2_0_0_0603_i_out_o(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_p_0_2_0_0_0603_i_out_o),
    .p_0_2_0_0_0603_i_out_o_ap_vld(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_p_0_2_0_0_0603_i_out_o_ap_vld),
    .p_0_1_0_0_0601_i_out_i(p_0_1_0_0_0602_lcssa626_i_fu_72),
    .p_0_1_0_0_0601_i_out_o(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_p_0_1_0_0_0601_i_out_o),
    .p_0_1_0_0_0601_i_out_o_ap_vld(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_p_0_1_0_0_0601_i_out_o_ap_vld),
    .p_0_0_0_0_0423599_i_out_i(p_0_0_0_0_0423600_lcssa623_i_fu_68),
    .p_0_0_0_0_0423599_i_out_o(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_p_0_0_0_0_0423599_i_out_o),
    .p_0_0_0_0_0423599_i_out_o_ap_vld(grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_p_0_0_0_0_0423599_i_out_o_ap_vld)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln953_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln953_fu_188_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
            grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_ap_start_reg <= 1'b1;
        end else if ((grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_ap_ready == 1'b1)) begin
            grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (1'b0 == HwReg_height_c_full_n) | (1'b0 == HwReg_width_c_full_n) | (1'b0 == HwReg_width_empty_n) | (1'b0 == HwReg_height_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        y_fu_88 <= 13'd0;
    end else if (((icmp_ln953_fu_188_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        y_fu_88 <= add_ln953_2_fu_193_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((ap_start == 1'b0) | (1'b0 == HwReg_height_c_full_n) | (1'b0 == HwReg_width_c_full_n) | (1'b0 == HwReg_width_empty_n) | (1'b0 == HwReg_height_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        add_ln953_reg_294 <= add_ln953_fu_174_p2;
        loopWidth_reg_279 <= HwReg_width_dout;
        zext_ln907_reg_284[0] <= zext_ln907_fu_166_p1[0];
        zext_ln951_reg_289[11 : 0] <= zext_ln951_fu_170_p1[11 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln953_fu_188_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        cmp105_i_reg_312 <= cmp105_i_fu_215_p2;
        cmp33_i_reg_307 <= cmp33_i_fu_209_p2;
        empty_reg_302 <= empty_fu_204_p1;
        rev_reg_317 <= rev_fu_230_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_p_0_0_0_0_0423599_i_out_o_ap_vld == 1'b1))) begin
        p_0_0_0_0_0423600_lcssa623_i_fu_68 <= grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_p_0_0_0_0_0423599_i_out_o;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_p_0_0_0_0_0423605_i_out_o_ap_vld == 1'b1))) begin
        p_0_0_0_0_0423606_lcssa632_i_fu_80 <= grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_p_0_0_0_0_0423605_i_out_o;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_p_0_1_0_0_0601_i_out_o_ap_vld == 1'b1))) begin
        p_0_1_0_0_0602_lcssa626_i_fu_72 <= grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_p_0_1_0_0_0601_i_out_o;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_p_0_1_0_0_0607_i_out_o_ap_vld == 1'b1))) begin
        p_0_1_0_0_0608_lcssa635_i_fu_84 <= grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_p_0_1_0_0_0607_i_out_o;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_p_0_2_0_0_0603_i_out_o_ap_vld == 1'b1))) begin
        p_0_2_0_0_0604_lcssa629_i_fu_76 <= grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_p_0_2_0_0_0603_i_out_o;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        HwReg_height_blk_n = HwReg_height_empty_n;
    end else begin
        HwReg_height_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        HwReg_height_c_blk_n = HwReg_height_c_full_n;
    end else begin
        HwReg_height_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == HwReg_height_c_full_n) | (1'b0 == HwReg_width_c_full_n) | (1'b0 == HwReg_width_empty_n) | (1'b0 == HwReg_height_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        HwReg_height_c_write = 1'b1;
    end else begin
        HwReg_height_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == HwReg_height_c_full_n) | (1'b0 == HwReg_width_c_full_n) | (1'b0 == HwReg_width_empty_n) | (1'b0 == HwReg_height_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        HwReg_height_read = 1'b1;
    end else begin
        HwReg_height_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        HwReg_width_blk_n = HwReg_width_empty_n;
    end else begin
        HwReg_width_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        HwReg_width_c_blk_n = HwReg_width_c_full_n;
    end else begin
        HwReg_width_c_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == HwReg_height_c_full_n) | (1'b0 == HwReg_width_c_full_n) | (1'b0 == HwReg_width_empty_n) | (1'b0 == HwReg_height_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        HwReg_width_c_write = 1'b1;
    end else begin
        HwReg_width_c_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((ap_start == 1'b0) | (1'b0 == HwReg_height_c_full_n) | (1'b0 == HwReg_width_c_full_n) | (1'b0 == HwReg_width_empty_n) | (1'b0 == HwReg_height_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        HwReg_width_read = 1'b1;
    end else begin
        HwReg_width_read = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) | (1'b0 == HwReg_height_c_full_n) | (1'b0 == HwReg_width_c_full_n) | (1'b0 == HwReg_width_empty_n) | (1'b0 == HwReg_height_empty_n) | (ap_done_reg == 1'b1))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if ((grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln953_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln953_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        stream_out_hresampled_read = grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_stream_out_hresampled_read;
    end else begin
        stream_out_hresampled_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        stream_out_vresampled_write = grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_stream_out_vresampled_write;
    end else begin
        stream_out_vresampled_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (1'b0 == HwReg_height_c_full_n) | (1'b0 == HwReg_width_c_full_n) | (1'b0 == HwReg_width_empty_n) | (1'b0 == HwReg_height_empty_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln953_fu_188_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign HwReg_height_c_din = HwReg_height_dout;

assign HwReg_width_c_din = HwReg_width_dout;

assign add_ln953_2_fu_193_p2 = (y_fu_88 + 13'd1);

assign add_ln953_fu_174_p2 = (zext_ln951_fu_170_p1 + zext_ln907_fu_166_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (1'b0 == HwReg_height_c_full_n) | (1'b0 == HwReg_width_c_full_n) | (1'b0 == HwReg_width_empty_n) | (1'b0 == HwReg_height_empty_n) | (ap_done_reg == 1'b1));
end

assign cmp105_i_fu_215_p2 = ((y_fu_88 != 13'd0) ? 1'b1 : 1'b0);

assign cmp33_i_fu_209_p2 = ((y_fu_88 < zext_ln951_reg_289) ? 1'b1 : 1'b0);

assign empty_fu_204_p1 = out_y_fu_199_p2[0:0];

assign grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_ap_start = grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_ap_start_reg;

assign icmp_ln953_fu_188_p2 = ((y_fu_88 == add_ln953_reg_294) ? 1'b1 : 1'b0);

assign out_y_fu_199_p2 = (y_fu_88 - zext_ln907_reg_284);

assign rev_fu_230_p2 = (tmp_fu_222_p3 ^ 1'd1);

assign stream_out_vresampled_din = grp_v_vcresampler_core_Pipeline_VITIS_LOOP_955_2_fu_138_stream_out_vresampled_din;

assign tmp_fu_222_p3 = out_y_fu_199_p2[32'd12];

assign yOffset_fu_160_p2 = (p_read ^ 1'd1);

assign zext_ln907_fu_166_p1 = yOffset_fu_160_p2;

assign zext_ln951_fu_170_p1 = HwReg_height_dout;

always @ (posedge ap_clk) begin
    zext_ln907_reg_284[12:1] <= 12'b000000000000;
    zext_ln951_reg_289[12] <= 1'b0;
end

endmodule //bd_85a6_csc_0_v_vcresampler_core
