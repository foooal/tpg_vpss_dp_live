// ==============================================================
// Generated by Vitis HLS v2023.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module bd_85a6_csc_0_v_vcresampler_core_1_Pipeline_VITIS_LOOP_955_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        stream_in_dout,
        stream_in_num_data_valid,
        stream_in_fifo_cap,
        stream_in_empty_n,
        stream_in_read,
        stream_in_vresampled_din,
        stream_in_vresampled_num_data_valid,
        stream_in_vresampled_fifo_cap,
        stream_in_vresampled_full_n,
        stream_in_vresampled_write,
        loopWidth,
        out_y_cast_i,
        cmp393_i,
        linebuf_y_address0,
        linebuf_y_ce0,
        linebuf_y_we0,
        linebuf_y_d0,
        linebuf_y_address1,
        linebuf_y_ce1,
        linebuf_y_q1,
        linebuf_y_1_address0,
        linebuf_y_1_ce0,
        linebuf_y_1_we0,
        linebuf_y_1_d0,
        linebuf_y_1_q0,
        cmp105_i,
        linebuf_c_address0,
        linebuf_c_ce0,
        linebuf_c_we0,
        linebuf_c_d0,
        linebuf_c_address1,
        linebuf_c_ce1,
        linebuf_c_q1,
        linebuf_c_1_address0,
        linebuf_c_1_ce0,
        linebuf_c_1_we0,
        linebuf_c_1_d0,
        linebuf_c_1_address1,
        linebuf_c_1_ce1,
        linebuf_c_1_q1,
        y_cast2_i,
        cmp33_i,
        p_read,
        p_0_1_0_0_0607_i_out_i,
        p_0_1_0_0_0607_i_out_o,
        p_0_1_0_0_0607_i_out_o_ap_vld,
        p_0_0_0_0_0423605_i_out_i,
        p_0_0_0_0_0423605_i_out_o,
        p_0_0_0_0_0423605_i_out_o_ap_vld,
        p_0_2_0_0_0603_i_out_i,
        p_0_2_0_0_0603_i_out_o,
        p_0_2_0_0_0603_i_out_o_ap_vld,
        p_0_1_0_0_0601_i_out_i,
        p_0_1_0_0_0601_i_out_o,
        p_0_1_0_0_0601_i_out_o_ap_vld,
        p_0_0_0_0_0423599_i_out_i,
        p_0_0_0_0_0423599_i_out_o,
        p_0_0_0_0_0423599_i_out_o_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [23:0] stream_in_dout;
input  [4:0] stream_in_num_data_valid;
input  [4:0] stream_in_fifo_cap;
input   stream_in_empty_n;
output   stream_in_read;
output  [23:0] stream_in_vresampled_din;
input  [4:0] stream_in_vresampled_num_data_valid;
input  [4:0] stream_in_vresampled_fifo_cap;
input   stream_in_vresampled_full_n;
output   stream_in_vresampled_write;
input  [11:0] loopWidth;
input  [0:0] out_y_cast_i;
input  [0:0] cmp393_i;
output  [11:0] linebuf_y_address0;
output   linebuf_y_ce0;
output   linebuf_y_we0;
output  [7:0] linebuf_y_d0;
output  [11:0] linebuf_y_address1;
output   linebuf_y_ce1;
input  [7:0] linebuf_y_q1;
output  [11:0] linebuf_y_1_address0;
output   linebuf_y_1_ce0;
output   linebuf_y_1_we0;
output  [7:0] linebuf_y_1_d0;
input  [7:0] linebuf_y_1_q0;
input  [0:0] cmp105_i;
output  [11:0] linebuf_c_address0;
output   linebuf_c_ce0;
output   linebuf_c_we0;
output  [7:0] linebuf_c_d0;
output  [11:0] linebuf_c_address1;
output   linebuf_c_ce1;
input  [7:0] linebuf_c_q1;
output  [11:0] linebuf_c_1_address0;
output   linebuf_c_1_ce0;
output   linebuf_c_1_we0;
output  [7:0] linebuf_c_1_d0;
output  [11:0] linebuf_c_1_address1;
output   linebuf_c_1_ce1;
input  [7:0] linebuf_c_1_q1;
input  [0:0] y_cast2_i;
input  [0:0] cmp33_i;
input  [0:0] p_read;
input  [7:0] p_0_1_0_0_0607_i_out_i;
output  [7:0] p_0_1_0_0_0607_i_out_o;
output   p_0_1_0_0_0607_i_out_o_ap_vld;
input  [7:0] p_0_0_0_0_0423605_i_out_i;
output  [7:0] p_0_0_0_0_0423605_i_out_o;
output   p_0_0_0_0_0423605_i_out_o_ap_vld;
input  [7:0] p_0_2_0_0_0603_i_out_i;
output  [7:0] p_0_2_0_0_0603_i_out_o;
output   p_0_2_0_0_0603_i_out_o_ap_vld;
input  [7:0] p_0_1_0_0_0601_i_out_i;
output  [7:0] p_0_1_0_0_0601_i_out_o;
output   p_0_1_0_0_0601_i_out_o_ap_vld;
input  [7:0] p_0_0_0_0_0423599_i_out_i;
output  [7:0] p_0_0_0_0_0423599_i_out_o;
output   p_0_0_0_0_0423599_i_out_o_ap_vld;

reg ap_idle;
reg stream_in_read;
reg[23:0] stream_in_vresampled_din;
reg stream_in_vresampled_write;
reg linebuf_y_ce0;
reg linebuf_y_we0;
reg linebuf_y_ce1;
reg linebuf_y_1_ce0;
reg linebuf_y_1_we0;
reg linebuf_c_ce0;
reg linebuf_c_we0;
reg linebuf_c_ce1;
reg linebuf_c_1_ce0;
reg linebuf_c_1_we0;
reg linebuf_c_1_ce1;
reg[7:0] p_0_1_0_0_0607_i_out_o;
reg p_0_1_0_0_0607_i_out_o_ap_vld;
reg[7:0] p_0_0_0_0_0423605_i_out_o;
reg p_0_0_0_0_0423605_i_out_o_ap_vld;
reg[7:0] p_0_2_0_0_0603_i_out_o;
reg p_0_2_0_0_0603_i_out_o_ap_vld;
reg[7:0] p_0_1_0_0_0601_i_out_o;
reg p_0_1_0_0_0601_i_out_o_ap_vld;
reg[7:0] p_0_0_0_0_0423599_i_out_o;
reg p_0_0_0_0_0423599_i_out_o_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
reg   [0:0] icmp_ln955_reg_459;
reg    ap_predicate_op33_read_state2;
reg    ap_block_state2_pp0_stage0_iter1;
reg    ap_predicate_op72_write_state3;
reg    ap_block_state3_pp0_stage0_iter2;
reg    ap_predicate_op84_write_state4;
reg    ap_block_state4_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln955_fu_229_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg    stream_in_blk_n;
wire    ap_block_pp0_stage0;
reg    stream_in_vresampled_blk_n;
reg    ap_block_pp0_stage0_11001;
reg   [11:0] out_x_1_reg_454;
reg   [0:0] icmp_ln955_reg_459_pp0_iter1_reg;
reg   [0:0] icmp_ln955_reg_459_pp0_iter2_reg;
reg   [11:0] linebuf_y_addr_reg_463;
reg   [11:0] linebuf_y_1_addr_reg_469;
reg   [11:0] linebuf_c_addr_reg_474;
reg   [11:0] linebuf_c_1_addr_reg_480;
wire   [7:0] select_ln1024_fu_320_p3;
reg   [7:0] select_ln1024_reg_491;
wire   [7:0] select_ln1036_fu_332_p3;
reg    ap_condition_exit_pp0_iter1_stage0;
wire   [7:0] ap_phi_reg_pp0_iter0_empty_reg_212;
reg   [7:0] ap_phi_reg_pp0_iter1_empty_reg_212;
reg   [7:0] ap_phi_reg_pp0_iter2_empty_reg_212;
reg   [7:0] ap_phi_reg_pp0_iter3_empty_reg_212;
wire   [63:0] zext_ln955_fu_246_p1;
wire   [7:0] trunc_ln965_fu_253_p1;
reg   [11:0] out_x_fu_90;
wire   [11:0] add_ln955_fu_235_p2;
wire    ap_loop_init;
reg   [11:0] ap_sig_allocacmp_out_x_1;
wire   [23:0] p_0_fu_359_p4;
reg    ap_block_pp0_stage0_01001;
wire   [23:0] zext_ln1129_fu_413_p1;
wire   [8:0] zext_ln1110_fu_370_p1;
wire   [8:0] add_ln1110_fu_377_p2;
wire   [8:0] zext_ln1110_1_fu_373_p1;
wire   [8:0] add_ln1110_1_fu_383_p2;
wire   [7:0] trunc_ln_fu_389_p4;
wire   [7:0] empty_75_fu_399_p3;
wire   [15:0] tmp_1_i_fu_405_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg   [0:0] ap_NS_fsm;
reg    ap_block_pp0;
reg    ap_predicate_op44_load_state2;
reg    ap_enable_operation_44;
reg    ap_enable_state2_pp0_iter1_stage0;
reg    ap_predicate_op51_load_state3;
reg    ap_enable_operation_51;
reg    ap_enable_state3_pp0_iter2_stage0;
reg    ap_enable_operation_56;
reg    ap_enable_operation_48;
reg    ap_enable_operation_54;
reg    ap_predicate_op63_store_state3;
reg    ap_enable_operation_63;
reg    ap_predicate_op49_load_state2;
reg    ap_enable_operation_49;
reg    ap_predicate_op55_load_state3;
reg    ap_enable_operation_55;
reg    ap_predicate_op66_store_state3;
reg    ap_enable_operation_66;
reg    ap_enable_operation_57;
reg    ap_enable_operation_52;
reg    ap_enable_operation_74;
reg    ap_enable_state4_pp0_iter3_stage0;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_done_reg = 1'b0;
end

bd_85a6_csc_0_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage0)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        if (((icmp_ln955_reg_459_pp0_iter1_reg == 1'd0) & (y_cast2_i == 1'd1))) begin
            ap_phi_reg_pp0_iter3_empty_reg_212 <= linebuf_c_q1;
        end else if (((icmp_ln955_reg_459_pp0_iter1_reg == 1'd0) & (y_cast2_i == 1'd0))) begin
            ap_phi_reg_pp0_iter3_empty_reg_212 <= select_ln1036_fu_332_p3;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter3_empty_reg_212 <= ap_phi_reg_pp0_iter2_empty_reg_212;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln955_fu_229_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            out_x_fu_90 <= add_ln955_fu_235_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            out_x_fu_90 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln955_reg_459 <= icmp_ln955_fu_229_p2;
        icmp_ln955_reg_459_pp0_iter1_reg <= icmp_ln955_reg_459;
        out_x_1_reg_454 <= ap_sig_allocacmp_out_x_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_empty_reg_212 <= ap_phi_reg_pp0_iter0_empty_reg_212;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter2_empty_reg_212 <= ap_phi_reg_pp0_iter1_empty_reg_212;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln955_reg_459_pp0_iter2_reg <= icmp_ln955_reg_459_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln955_reg_459 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_c_1_addr_reg_480 <= zext_ln955_fu_246_p1;
        linebuf_c_addr_reg_474 <= zext_ln955_fu_246_p1;
        linebuf_y_1_addr_reg_469 <= zext_ln955_fu_246_p1;
        linebuf_y_addr_reg_463 <= zext_ln955_fu_246_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln955_reg_459_pp0_iter1_reg == 1'd0))) begin
        select_ln1024_reg_491 <= select_ln1024_fu_320_p3;
    end
end

always @ (*) begin
    if (((icmp_ln955_fu_229_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (icmp_ln955_reg_459 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_out_x_1 = 12'd0;
    end else begin
        ap_sig_allocacmp_out_x_1 = out_x_fu_90;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        linebuf_c_1_ce0 = 1'b1;
    end else begin
        linebuf_c_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_c_1_ce1 = 1'b1;
    end else begin
        linebuf_c_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln955_reg_459_pp0_iter1_reg == 1'd0) & (y_cast2_i == 1'd0))) begin
        linebuf_c_1_we0 = 1'b1;
    end else begin
        linebuf_c_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        linebuf_c_ce0 = 1'b1;
    end else begin
        linebuf_c_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_c_ce1 = 1'b1;
    end else begin
        linebuf_c_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (cmp33_i == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (y_cast2_i == 1'd0))) begin
        linebuf_c_we0 = 1'b1;
    end else begin
        linebuf_c_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln955_reg_459_pp0_iter1_reg == 1'd0))) begin
        linebuf_y_1_ce0 = 1'b1;
    end else begin
        linebuf_y_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln955_reg_459_pp0_iter1_reg == 1'd0))) begin
        linebuf_y_1_we0 = 1'b1;
    end else begin
        linebuf_y_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        linebuf_y_ce0 = 1'b1;
    end else begin
        linebuf_y_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        linebuf_y_ce1 = 1'b1;
    end else begin
        linebuf_y_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln955_reg_459_pp0_iter1_reg == 1'd0))) begin
        linebuf_y_we0 = 1'b1;
    end else begin
        linebuf_y_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (cmp33_i == 1'd1) & (icmp_ln955_reg_459 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_0_0_0_0423599_i_out_o = trunc_ln965_fu_253_p1;
    end else begin
        p_0_0_0_0_0423599_i_out_o = p_0_0_0_0_0423599_i_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (cmp33_i == 1'd1) & (icmp_ln955_reg_459 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_0_0_0_0423599_i_out_o_ap_vld = 1'b1;
    end else begin
        p_0_0_0_0_0423599_i_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (cmp33_i == 1'd1) & (icmp_ln955_reg_459 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_0_0_0_0423605_i_out_o = trunc_ln965_fu_253_p1;
    end else begin
        p_0_0_0_0_0423605_i_out_o = p_0_0_0_0_0423605_i_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (cmp33_i == 1'd1) & (icmp_ln955_reg_459 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_0_0_0_0423605_i_out_o_ap_vld = 1'b1;
    end else begin
        p_0_0_0_0_0423605_i_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (cmp33_i == 1'd1) & (icmp_ln955_reg_459 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_1_0_0_0601_i_out_o = {{stream_in_dout[15:8]}};
    end else begin
        p_0_1_0_0_0601_i_out_o = p_0_1_0_0_0601_i_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (cmp33_i == 1'd1) & (icmp_ln955_reg_459 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_1_0_0_0601_i_out_o_ap_vld = 1'b1;
    end else begin
        p_0_1_0_0_0601_i_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (cmp33_i == 1'd1) & (icmp_ln955_reg_459 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_1_0_0_0607_i_out_o = {{stream_in_dout[15:8]}};
    end else begin
        p_0_1_0_0_0607_i_out_o = p_0_1_0_0_0607_i_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (cmp33_i == 1'd1) & (icmp_ln955_reg_459 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_1_0_0_0607_i_out_o_ap_vld = 1'b1;
    end else begin
        p_0_1_0_0_0607_i_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (cmp33_i == 1'd1) & (icmp_ln955_reg_459 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_2_0_0_0603_i_out_o = {{stream_in_dout[23:16]}};
    end else begin
        p_0_2_0_0_0603_i_out_o = p_0_2_0_0_0603_i_out_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (cmp33_i == 1'd1) & (icmp_ln955_reg_459 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_0_2_0_0_0603_i_out_o_ap_vld = 1'b1;
    end else begin
        p_0_2_0_0_0603_i_out_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op33_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_in_blk_n = stream_in_empty_n;
    end else begin
        stream_in_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op33_read_state2 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_in_read = 1'b1;
    end else begin
        stream_in_read = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op84_write_state4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_predicate_op72_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        stream_in_vresampled_blk_n = stream_in_vresampled_full_n;
    end else begin
        stream_in_vresampled_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b0 == ap_block_pp0_stage0_01001)) begin
        if (((ap_predicate_op84_write_state4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
            stream_in_vresampled_din = zext_ln1129_fu_413_p1;
        end else if (((ap_predicate_op72_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
            stream_in_vresampled_din = p_0_fu_359_p4;
        end else begin
            stream_in_vresampled_din = 'bx;
        end
    end else begin
        stream_in_vresampled_din = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op84_write_state4 == 1'b1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_predicate_op72_write_state3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
        stream_in_vresampled_write = 1'b1;
    end else begin
        stream_in_vresampled_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1110_1_fu_383_p2 = (add_ln1110_fu_377_p2 + zext_ln1110_1_fu_373_p1);

assign add_ln1110_fu_377_p2 = (zext_ln1110_fu_370_p1 + 9'd1);

assign add_ln955_fu_235_p2 = (ap_sig_allocacmp_out_x_1 + 12'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_pp0 = ((ap_ST_fsm_pp0_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp0_stage0_subdone));
end

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_predicate_op84_write_state4 == 1'b1) & (stream_in_vresampled_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_predicate_op72_write_state3 == 1'b1) & (stream_in_vresampled_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_predicate_op33_read_state2 == 1'b1) & (stream_in_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_predicate_op84_write_state4 == 1'b1) & (stream_in_vresampled_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_predicate_op72_write_state3 == 1'b1) & (stream_in_vresampled_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_predicate_op33_read_state2 == 1'b1) & (stream_in_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_predicate_op84_write_state4 == 1'b1) & (stream_in_vresampled_full_n == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_predicate_op72_write_state3 == 1'b1) & (stream_in_vresampled_full_n == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((ap_predicate_op33_read_state2 == 1'b1) & (stream_in_empty_n == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1)));
end

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state2_pp0_stage0_iter1 = ((ap_predicate_op33_read_state2 == 1'b1) & (stream_in_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage0_iter2 = ((ap_predicate_op72_write_state3 == 1'b1) & (stream_in_vresampled_full_n == 1'b0));
end

always @ (*) begin
    ap_block_state4_pp0_stage0_iter3 = ((ap_predicate_op84_write_state4 == 1'b1) & (stream_in_vresampled_full_n == 1'b0));
end

always @ (*) begin
    ap_enable_operation_44 = (ap_predicate_op44_load_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_48 = (icmp_ln955_reg_459 == 1'd0);
end

always @ (*) begin
    ap_enable_operation_49 = (ap_predicate_op49_load_state2 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_51 = (ap_predicate_op51_load_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_52 = (icmp_ln955_reg_459_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_54 = (icmp_ln955_reg_459_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_55 = (ap_predicate_op55_load_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_56 = (icmp_ln955_reg_459_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_57 = (icmp_ln955_reg_459_pp0_iter1_reg == 1'd0);
end

always @ (*) begin
    ap_enable_operation_63 = (ap_predicate_op63_store_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_66 = (ap_predicate_op66_store_state3 == 1'b1);
end

always @ (*) begin
    ap_enable_operation_74 = (icmp_ln955_reg_459_pp0_iter2_reg == 1'd0);
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

always @ (*) begin
    ap_enable_state2_pp0_iter1_stage0 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state3_pp0_iter2_stage0 = ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

always @ (*) begin
    ap_enable_state4_pp0_iter3_stage0 = ((ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_empty_reg_212 = 'bx;

always @ (*) begin
    ap_predicate_op33_read_state2 = ((cmp33_i == 1'd1) & (icmp_ln955_reg_459 == 1'd0));
end

always @ (*) begin
    ap_predicate_op44_load_state2 = ((icmp_ln955_reg_459 == 1'd0) & (cmp105_i == 1'd1));
end

always @ (*) begin
    ap_predicate_op49_load_state2 = ((icmp_ln955_reg_459 == 1'd0) & (y_cast2_i == 1'd1));
end

always @ (*) begin
    ap_predicate_op51_load_state3 = ((icmp_ln955_reg_459_pp0_iter1_reg == 1'd0) & (cmp105_i == 1'd1));
end

always @ (*) begin
    ap_predicate_op55_load_state3 = ((icmp_ln955_reg_459_pp0_iter1_reg == 1'd0) & (y_cast2_i == 1'd1));
end

always @ (*) begin
    ap_predicate_op63_store_state3 = ((cmp33_i == 1'd1) & (y_cast2_i == 1'd0));
end

always @ (*) begin
    ap_predicate_op66_store_state3 = ((icmp_ln955_reg_459_pp0_iter1_reg == 1'd0) & (y_cast2_i == 1'd0));
end

always @ (*) begin
    ap_predicate_op72_write_state3 = ((p_read == 1'd1) & (cmp393_i == 1'd1));
end

always @ (*) begin
    ap_predicate_op84_write_state4 = ((p_read == 1'd0) & (cmp393_i == 1'd1));
end

assign empty_75_fu_399_p3 = ((out_y_cast_i[0:0] == 1'b1) ? trunc_ln_fu_389_p4 : select_ln1024_reg_491);

assign icmp_ln955_fu_229_p2 = ((ap_sig_allocacmp_out_x_1 == loopWidth) ? 1'b1 : 1'b0);

assign linebuf_c_1_address0 = linebuf_c_1_addr_reg_480;

assign linebuf_c_1_address1 = zext_ln955_fu_246_p1;

assign linebuf_c_1_d0 = ((cmp105_i[0:0] == 1'b1) ? select_ln1024_fu_320_p3 : select_ln1036_fu_332_p3);

assign linebuf_c_address0 = linebuf_c_addr_reg_474;

assign linebuf_c_address1 = zext_ln955_fu_246_p1;

assign linebuf_c_d0 = p_0_1_0_0_0607_i_out_i;

assign linebuf_y_1_address0 = linebuf_y_1_addr_reg_469;

assign linebuf_y_1_d0 = ((cmp105_i[0:0] == 1'b1) ? linebuf_y_q1 : p_0_0_0_0_0423605_i_out_i);

assign linebuf_y_address0 = linebuf_y_addr_reg_463;

assign linebuf_y_address1 = zext_ln955_fu_246_p1;

assign linebuf_y_d0 = p_0_0_0_0_0423605_i_out_i;

assign p_0_fu_359_p4 = {{{p_0_2_0_0_0603_i_out_i}, {p_0_1_0_0_0601_i_out_i}}, {p_0_0_0_0_0423599_i_out_i}};

assign select_ln1024_fu_320_p3 = ((y_cast2_i[0:0] == 1'b1) ? linebuf_c_1_q1 : linebuf_c_q1);

assign select_ln1036_fu_332_p3 = ((cmp33_i[0:0] == 1'b1) ? p_0_1_0_0_0607_i_out_i : select_ln1024_fu_320_p3);

assign tmp_1_i_fu_405_p3 = {{empty_75_fu_399_p3}, {linebuf_y_1_q0}};

assign trunc_ln965_fu_253_p1 = stream_in_dout[7:0];

assign trunc_ln_fu_389_p4 = {{add_ln1110_1_fu_383_p2[8:1]}};

assign zext_ln1110_1_fu_373_p1 = ap_phi_reg_pp0_iter3_empty_reg_212;

assign zext_ln1110_fu_370_p1 = select_ln1024_reg_491;

assign zext_ln1129_fu_413_p1 = tmp_1_i_fu_405_p3;

assign zext_ln955_fu_246_p1 = out_x_1_reg_454;

endmodule //bd_85a6_csc_0_v_vcresampler_core_1_Pipeline_VITIS_LOOP_955_2
